{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from 'react';\nimport clsx from 'clsx';\n\nconst Dropdown = ({\n  className,\n  buttonLabel,\n  children\n}) => {\n  const node = React.useRef();\n  const [showDropdown, setShowDropdown] = React.useState(false);\n\n  const toggleDropdown = () => {\n    setShowDropdown(!showDropdown);\n  };\n\n  const handleClickOutside = e => {\n    var _node$current;\n\n    if (node === null || node === void 0 ? void 0 : (_node$current = node.current) === null || _node$current === void 0 ? void 0 : _node$current.contains(e.target)) {\n      return;\n    }\n\n    setShowDropdown(false);\n  };\n\n  React.useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  return __jsx(\"div\", {\n    ref: node,\n    className: clsx('relative inline-block', className)\n  }, __jsx(\"button\", {\n    className: clsx('p-2 rounded-full', {\n      'hover:bg-primary hover:bg-opacity-25': !showDropdown,\n      'bg-primary text-white': showDropdown\n    }),\n    onClick: toggleDropdown\n  }, buttonLabel), showDropdown && __jsx(\"div\", {\n    className: \"absolute right-0 mt-1 bg-white dark:bg-gray-800 border dark:border-gray-700 rounded shadow-md p-2 space-y-2\"\n  }, children));\n};\n\nexport default Dropdown;","map":null,"metadata":{},"sourceType":"module"}