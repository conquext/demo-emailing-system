{"ast":null,"code":"// When disposing this file run the following commands\n// npm uninstall apollo-server-micro\nimport { ApolloServer, gql } from 'apollo-server-micro';\nconst typeDefs = gql`\n  type Query {\n    hello: String!\n    me: User!\n  }\n  type User {\n    id: ID!\n    name: String!\n    email: String!\n    password: String\n  }\n  type Mutation {\n    signup(email: String!, name: String!, password: String!): User!\n    login(email: String!, password: String!): User!\n  }\n`;\nconst user = {\n  id: 'string',\n  name: 'string',\n  email: 'string',\n  password: 'string'\n};\nconst resolvers = {\n  Query: {\n    hello: () => {\n      return 'Hello';\n    },\n\n    me() {\n      return user;\n    }\n\n  },\n  Mutation: {\n    login(_parent, args, ctx, _info) {\n      return user;\n    },\n\n    signup(_parent, args, ctx, _info) {\n      return user;\n    }\n\n  }\n};\nconst apolloServer = new ApolloServer({\n  typeDefs,\n  resolvers,\n  context: () => {// return { loader };\n  }\n});\nconst handler = apolloServer.createHandler({\n  path: '/api/graphql'\n});\nexport const config = {\n  api: {\n    bodyParser: false\n  }\n};\nexport default handler;","map":{"version":3,"sources":["/mnt/c/Users/arash/Documents/DevInDoc/Getaboard/demoEmail/reward-test/src/pages/api/index.ts"],"names":["ApolloServer","gql","typeDefs","user","id","name","email","password","resolvers","Query","hello","me","Mutation","login","_parent","args","ctx","_info","signup","apolloServer","context","handler","createHandler","path","config","api","bodyParser"],"mappings":"AAAA;AACA;AAEA,SAASA,YAAT,EAAuBC,GAAvB,QAAkC,qBAAlC;AAEA,MAAMC,QAAQ,GAAGD,GAAI;;;;;;;;;;;;;;;CAArB;AAiBA,MAAME,IAAI,GAAG;AACXC,EAAAA,EAAE,EAAE,QADO;AAEXC,EAAAA,IAAI,EAAE,QAFK;AAGXC,EAAAA,KAAK,EAAE,QAHI;AAIXC,EAAAA,QAAQ,EAAE;AAJC,CAAb;AAOA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,MAAM;AACX,aAAO,OAAP;AACD,KAHI;;AAILC,IAAAA,EAAE,GAAG;AACH,aAAOR,IAAP;AACD;;AANI,GADS;AAShBS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,CACHC,OADG,EAEHC,IAFG,EAGHC,GAHG,EAIHC,KAJG,EAKH;AACA,aAAOd,IAAP;AACD,KARO;;AASRe,IAAAA,MAAM,CACJJ,OADI,EAEJC,IAFI,EAGJC,GAHI,EAIJC,KAJI,EAKJ;AACA,aAAOd,IAAP;AACD;;AAhBO;AATM,CAAlB;AA6BA,MAAMgB,YAAY,GAAG,IAAInB,YAAJ,CAAiB;AACpCE,EAAAA,QADoC;AAEpCM,EAAAA,SAFoC;AAGpCY,EAAAA,OAAO,EAAE,MAAM,CACb;AACD;AALmC,CAAjB,CAArB;AAQA,MAAMC,OAAO,GAAGF,YAAY,CAACG,aAAb,CAA2B;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAA3B,CAAhB;AAEA,OAAO,MAAMC,MAAM,GAAG;AACpBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,UAAU,EAAE;AADT;AADe,CAAf;AAMP,eAAeL,OAAf","sourcesContent":["// When disposing this file run the following commands\n// npm uninstall apollo-server-micro\n\nimport { ApolloServer, gql } from 'apollo-server-micro'\n\nconst typeDefs = gql`\n  type Query {\n    hello: String!\n    me: User!\n  }\n  type User {\n    id: ID!\n    name: String!\n    email: String!\n    password: String\n  }\n  type Mutation {\n    signup(email: String!, name: String!, password: String!): User!\n    login(email: String!, password: String!): User!\n  }\n`\n\nconst user = {\n  id: 'string',\n  name: 'string',\n  email: 'string',\n  password: 'string',\n}\n\nconst resolvers = {\n  Query: {\n    hello: () => {\n      return 'Hello'\n    },\n    me() {\n      return user\n    },\n  },\n  Mutation: {\n    login(\n      _parent: unknown,\n      args: { email: string; password: string },\n      ctx: unknown,\n      _info: unknown\n    ) {\n      return user\n    },\n    signup(\n      _parent: unknown,\n      args: { email: string; password: string },\n      ctx: unknown,\n      _info: unknown\n    ) {\n      return user\n    },\n  },\n}\n\nconst apolloServer = new ApolloServer({\n  typeDefs,\n  resolvers,\n  context: () => {\n    // return { loader };\n  },\n})\n\nconst handler = apolloServer.createHandler({ path: '/api/graphql' })\n\nexport const config = {\n  api: {\n    bodyParser: false,\n  },\n}\n\nexport default handler\n"]},"metadata":{},"sourceType":"module"}