{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/arash/Documents/DevInDoc/Getaboard/demoEmail/reward-test/src/components/Checkbox.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\n// @ts-ignore\nconst Checkbox = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    indeterminate\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"indeterminate\"]);\n\n  const defaultRef = React.useRef();\n  const resolvedRef = ref || defaultRef;\n  React.useEffect(() => {\n    if (resolvedRef && resolvedRef.current) resolvedRef.current.indeterminate = indeterminate;\n  }, [resolvedRef, indeterminate]);\n  return __jsx(React.Fragment, null, __jsx(\"input\", _extends({\n    type: \"checkbox\",\n    ref: resolvedRef\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  })));\n});\nexport default Checkbox;","map":{"version":3,"sources":["/mnt/c/Users/arash/Documents/DevInDoc/Getaboard/demoEmail/reward-test/src/components/Checkbox.tsx"],"names":["React","Checkbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AASA;AACA,MAAMC,QAAQ,gBAAGD,KAAK,CAACE,UAAN,CAAiB,OAA6BC,GAA7B,KAAqC;AAAA,MAApC;AAAEC,IAAAA;AAAF,GAAoC;AAAA,MAAhBC,IAAgB;;AACrE,QAAMC,UAAU,GAAGN,KAAK,CAACO,MAAN,EAAnB;AACA,QAAMC,WAAW,GAAIL,GAAG,IAAIG,UAA5B;AAEAN,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpB,QAAID,WAAW,IAAIA,WAAW,CAACE,OAA/B,EACEF,WAAW,CAACE,OAAZ,CAAoBN,aAApB,GAAoCA,aAApC;AACH,GAHD,EAGG,CAACI,WAAD,EAAcJ,aAAd,CAHH;AAKA,SACE,4BACE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,GAAG,EAAEI;AAA5B,KAA6CH,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD,CAdgB,CAAjB;AAeA,eAAeJ,QAAf","sourcesContent":["import * as React from 'react'\nimport clsx from 'clsx'\n\nexport interface Props {\n  className?: string | Record<string, unknown>\n  ordered?: boolean\n  item?: boolean\n}\n\n// @ts-ignore\nconst Checkbox = React.forwardRef(({ indeterminate, ...rest }, ref) => {\n  const defaultRef = React.useRef()\n  const resolvedRef = (ref || defaultRef) as React.RefObject<HTMLInputElement>\n\n  React.useEffect(() => {\n    if (resolvedRef && resolvedRef.current)\n      resolvedRef.current.indeterminate = indeterminate\n  }, [resolvedRef, indeterminate])\n\n  return (\n    <>\n      <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n    </>\n  )\n})\nexport default Checkbox\n"]},"metadata":{},"sourceType":"module"}