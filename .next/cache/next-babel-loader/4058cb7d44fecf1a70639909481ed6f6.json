{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\n\nconst Input = (_ref) => {\n  let {\n    className,\n    startIcon: StartIcon,\n    label,\n    helpText,\n    errorMessage\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"className\", \"startIcon\", \"label\", \"helpText\", \"errorMessage\"]);\n\n  return __jsx(\"div\", {\n    className: clsx(className)\n  }, label && __jsx(\"label\", {\n    className: clsx('block mb-1 pl-2', 'text-xs text-gray-600 uppercase', 'font-light')\n  }, label), __jsx(\"div\", {\n    className: clsx('flex items-center', 'rounded-sm', 'border', props.disabled && 'border-dashed bg-gray-300 dark:bg-gray-800', !errorMessage && ['border-gray-400 focus-within:border-gray-600', 'dark:border-gray-700 dark-focus-within:border-gray-600'], errorMessage && 'border-red-600', !errorMessage && 'text-black dark:text-white', errorMessage && 'text-red-600')\n  }, StartIcon && __jsx(StartIcon, {\n    className: clsx('ml-2', errorMessage && 'text-red-600')\n  }), __jsx(\"input\", _extends({}, props, {\n    className: clsx('bg-transparent w-full py-1 px-2', props.disabled && 'cursor-not-allowed')\n  }))), helpText && __jsx(\"div\", {\n    className: \"pl-2 mt-1 text-xs text-gray-600 font-light\"\n  }, helpText), errorMessage && __jsx(\"div\", {\n    className: \"pl-2 mt-1 text-xs text-red-600 font-light\"\n  }, errorMessage));\n};\n\nexport default Input;","map":null,"metadata":{},"sourceType":"module"}