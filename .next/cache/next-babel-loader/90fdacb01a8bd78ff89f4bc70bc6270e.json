{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/arash/Documents/DevInDoc/Getaboard/demoEmail/reward-test/src/pages/_document.tsx\";\nvar __jsx = React.createElement;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport * as React from 'react';\nimport NextDocument, { Html, Head, Main, NextScript } from 'next/document';\n\nvar Document = /*#__PURE__*/function (_NextDocument) {\n  _inherits(Document, _NextDocument);\n\n  var _super = _createSuper(Document);\n\n  function Document() {\n    _classCallCheck(this, Document);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Document, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Html, {\n        lang: \"en\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }), __jsx(\"body\", {\n        className: \"min-h-screen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, __jsx(\"script\", {\n        dangerouslySetInnerHTML: {\n          __html: \"\\n                (function() {\\n                  var storageKey = 'darkMode';\\n                  var classNameDark = 'dark-mode';\\n                  var classNameLight = 'light-mode';\\n                \\n                  function setClassOnDocumentBody(darkMode) {\\n                    document.body.classList.add(darkMode ? classNameDark : classNameLight);\\n                    document.body.classList.remove(darkMode ? classNameLight : classNameDark);\\n                  }\\n                  \\n                  var preferDarkQuery = '(prefers-color-scheme: dark)';\\n                  var mql = window.matchMedia(preferDarkQuery);\\n                  var supportsColorSchemeQuery = mql.media === preferDarkQuery;\\n                  var localStorageTheme = null;\\n\\n                  try {\\n                    localStorageTheme = localStorage.getItem(storageKey);\\n                  } catch (err) {}\\n\\n                  var localStorageExists = localStorageTheme !== null;\\n                  if (localStorageExists) {\\n                    localStorageTheme = JSON.parse(localStorageTheme);\\n                  }\\n                \\n                  if (localStorageExists) {\\n                    setClassOnDocumentBody(localStorageTheme);\\n                  } else if (supportsColorSchemeQuery) {\\n                    setClassOnDocumentBody(mql.matches);\\n                    localStorage.setItem(storageKey, mql.matches);\\n                  } else {\\n                    var isDarkMode = document.body.classList.contains(classNameDark);\\n                    localStorage.setItem(storageKey, JSON.stringify(isDarkMode));\\n                  }\\n                })();\\n              \"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }), __jsx(Main, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }), __jsx(NextScript, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(context) {\n        var initialProps;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return NextDocument.getInitialProps(context);\n\n              case 2:\n                initialProps = _context.sent;\n                return _context.abrupt(\"return\", _objectSpread({}, initialProps));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Document;\n}(NextDocument);\n\nexport default Document;","map":{"version":3,"sources":["/mnt/c/Users/arash/Documents/DevInDoc/Getaboard/demoEmail/reward-test/src/pages/_document.tsx"],"names":["React","NextDocument","Html","Head","Main","NextScript","Document","__html","context","getInitialProps","initialProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,YAAP,IACEC,IADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,UAJF,QAMO,eANP;;IAQMC,Q;;;;;;;;;;;;;6BAMK;AACP,aACE,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,uBAAuB,EAAE;AACvBC,UAAAA,MAAM;AADiB,SAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAyCE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzCF,EA0CE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1CF,CAFF,CADF;AAiDD;;;;sGAvD4BC,O;;;;;;;uBACAP,YAAY,CAACQ,eAAb,CAA6BD,OAA7B,C;;;AAArBE,gBAAAA,Y;mEACMA,Y;;;;;;;;;;;;;;;;;;;EAHOT,Y;;AA2DvB,eAAeK,QAAf","sourcesContent":["import * as React from 'react'\nimport NextDocument, {\n  Html,\n  Head,\n  Main,\n  NextScript,\n  DocumentContext,\n} from 'next/document'\n\nclass Document extends NextDocument {\n  static async getInitialProps(context: DocumentContext) {\n    const initialProps = await NextDocument.getInitialProps(context)\n    return { ...initialProps }\n  }\n\n  render() {\n    return (\n      <Html lang=\"en\">\n        <Head></Head>\n        <body className=\"min-h-screen\">\n          <script\n            dangerouslySetInnerHTML={{\n              __html: `\n                (function() {\n                  var storageKey = 'darkMode';\n                  var classNameDark = 'dark-mode';\n                  var classNameLight = 'light-mode';\n                \n                  function setClassOnDocumentBody(darkMode) {\n                    document.body.classList.add(darkMode ? classNameDark : classNameLight);\n                    document.body.classList.remove(darkMode ? classNameLight : classNameDark);\n                  }\n                  \n                  var preferDarkQuery = '(prefers-color-scheme: dark)';\n                  var mql = window.matchMedia(preferDarkQuery);\n                  var supportsColorSchemeQuery = mql.media === preferDarkQuery;\n                  var localStorageTheme = null;\n\n                  try {\n                    localStorageTheme = localStorage.getItem(storageKey);\n                  } catch (err) {}\n\n                  var localStorageExists = localStorageTheme !== null;\n                  if (localStorageExists) {\n                    localStorageTheme = JSON.parse(localStorageTheme);\n                  }\n                \n                  if (localStorageExists) {\n                    setClassOnDocumentBody(localStorageTheme);\n                  } else if (supportsColorSchemeQuery) {\n                    setClassOnDocumentBody(mql.matches);\n                    localStorage.setItem(storageKey, mql.matches);\n                  } else {\n                    var isDarkMode = document.body.classList.contains(classNameDark);\n                    localStorage.setItem(storageKey, JSON.stringify(isDarkMode));\n                  }\n                })();\n              `,\n            }}\n          />\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    )\n  }\n}\n\nexport default Document\n"]},"metadata":{},"sourceType":"module"}