{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 1rem;\\n\\n  table {\\n    border-spacing: 0;\\n    border: 1px solid black;\\n\\n    tr {\\n      :last-child {\\n        td {\\n          border-bottom: 0;\\n        }\\n      }\\n    }\\n\\n    th,\\n    td {\\n      margin: 0;\\n      padding: 0.5rem;\\n      border-bottom: 1px solid black;\\n      border-right: 1px solid black;\\n\\n      :last-child {\\n        border-right: 0;\\n      }\\n\\n      input {\\n        font-size: 1rem;\\n        padding: 0;\\n        margin: 0;\\n        border: 0;\\n      }\\n    }\\n\\n    .pagination {\\n      padding: 0.5rem;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport { useTable, usePagination, useRowSelect, useSortBy, useFilters, useColumnOrder, useGlobalFilter, useAsyncDebounce } from 'react-table';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport matchSorter from 'match-sorter';\nimport styled from 'styled-components';\nvar Styles = styled.div(_templateObject()); // Define a default UI for filtering\n\n_c = Styles;\n\nfunction GlobalFilter(_ref) {\n  _s();\n\n  var preGlobalFilteredRows = _ref.preGlobalFilteredRows,\n      globalFilter = _ref.globalFilter,\n      setGlobalFilter = _ref.setGlobalFilter;\n  var count = preGlobalFilteredRows.length;\n\n  var _React$useState = React.useState(globalFilter),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _onChange = useAsyncDebounce(function (value) {\n    setGlobalFilter(value || undefined);\n  }, 200);\n\n  return __jsx(\"span\", null, \"Search:\", ' ', __jsx(\"input\", {\n    value: value || '',\n    onChange: function onChange(e) {\n      setValue(e.target.value);\n\n      _onChange(e.target.value);\n    },\n    placeholder: \"\".concat(count, \" records...\"),\n    style: {\n      fontSize: '1.1rem',\n      border: '0'\n    }\n  }));\n} // Define a default UI for filtering\n\n\n_s(GlobalFilter, \"u76gItWTPW4jhTYSCcNG7/LfbyA=\", false, function () {\n  return [useAsyncDebounce];\n});\n\n_c2 = GlobalFilter;\n\nfunction DefaultColumnFilter(_ref2) {\n  var _ref2$column = _ref2.column,\n      filterValue = _ref2$column.filterValue,\n      preFilteredRows = _ref2$column.preFilteredRows,\n      setFilter = _ref2$column.setFilter;\n  var count = preFilteredRows.length;\n  return __jsx(\"input\", {\n    value: filterValue || '',\n    onChange: function onChange(e) {\n      setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n    },\n    placeholder: \"Search \".concat(count, \" records...\")\n  });\n} // This is a custom filter UI for selecting\n// a unique option from a list\n\n\n_c3 = DefaultColumnFilter;\n\nfunction SelectColumnFilter(_ref3) {\n  _s2();\n\n  var _ref3$column = _ref3.column,\n      filterValue = _ref3$column.filterValue,\n      setFilter = _ref3$column.setFilter,\n      preFilteredRows = _ref3$column.preFilteredRows,\n      id = _ref3$column.id;\n  // Calculate the options for filtering\n  // using the preFilteredRows\n  var options = React.useMemo(function () {\n    var options = new Set();\n    preFilteredRows.forEach(function (row) {\n      options.add(row.values[id]);\n    }); // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    //@ts-ignore\n\n    return _toConsumableArray(options.values());\n  }, [id, preFilteredRows]); // Render a multi-select box\n\n  return __jsx(\"select\", {\n    value: filterValue,\n    onChange: function onChange(e) {\n      setFilter(e.target.value || undefined);\n    }\n  }, __jsx(\"option\", {\n    value: \"\"\n  }, \"All\"), options.map(function (option, i) {\n    return __jsx(\"option\", {\n      key: i,\n      value: option\n    }, option);\n  }));\n}\n\n_s2(SelectColumnFilter, \"UfleS4trXWGxzhzYTKqqYygmjCE=\");\n\n_c4 = SelectColumnFilter;\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, {\n    keys: [function (row) {\n      return row.values[id];\n    }]\n  });\n} // Let the table remove the filter if the string is empty\n\n\nfuzzyTextFilterFn.autoRemove = function (val) {\n  return !val;\n};\n\nfunction TableComponent(_ref4) {\n  _s3();\n\n  var columns = _ref4.columns,\n      data = _ref4.data,\n      setData = _ref4.setData,\n      editableFields = _ref4.editableFields;\n\n  var _useState = useState(false),\n      skipPageReset = _useState[0],\n      setSkipPageReset = _useState[1]; // We need to keep the table from resetting the pageIndex when we\n  // Update data. So we can keep track of that flag with a ref.\n  // When our cell renderer calls updateMyData, we'll use\n  // the rowIndex, columnId and new value to update the\n  // original data\n\n\n  var updateData = function updateData(rowIndex, columnId, value) {\n    // We also turn on the flag to not reset the page\n    setSkipPageReset(true);\n    setData(function (old) {\n      return old.map(function (row, index) {\n        if (index === rowIndex) {\n          return _objectSpread(_objectSpread({}, old[rowIndex]), {}, _defineProperty({}, columnId, value));\n        }\n\n        return row;\n      });\n    });\n  }; // After data chagnes, we turn the flag back off\n  // so that if data actually changes when we're not\n  // editing it, the page is reset\n\n\n  useEffect(function () {\n    setSkipPageReset(false);\n  }, [data]);\n  return __jsx(Styles, null, __jsx(Table, {\n    columns: columns,\n    data: data,\n    updateData: updateData,\n    skipPageReset: skipPageReset,\n    editableFields: editableFields\n  }));\n}\n\n_s3(TableComponent, \"sA641OB1DfZVk+1S50kd2PP+SoU=\");\n\n_c5 = TableComponent;\nexport default TableComponent; // Be sure to pass our updateData and the skipPageReset option\n\nfunction Table(_ref5) {\n  _s4();\n\n  var columns = _ref5.columns,\n      data = _ref5.data,\n      updateData = _ref5.updateData,\n      renderHeader = _ref5.renderHeader,\n      renderFilter = _ref5.renderFilter,\n      renderTableBody = _ref5.renderTableBody,\n      renderTableRow = _ref5.renderTableRow,\n      renderTableCell = _ref5.renderTableCell,\n      skipPageReset = _ref5.skipPageReset,\n      customHook = _ref5.customHook,\n      options = _ref5.options;\n\n  var _ref6 = options || {},\n      filterTypes = _ref6.filterTypes,\n      defaultColumn = _ref6.defaultColumn,\n      globalFilter = _ref6.globalFilter;\n\n  var extraHook = function extraHook(hooks) {\n    hooks.visibleColumns.push(function (columns) {\n      return _toConsumableArray(columns);\n    });\n  };\n\n  if (customHook) extraHook = customHook;\n  var hookOptions;\n  if (filterTypes) hookOptions.filterTypes = filterTypes;\n  if (defaultColumn) hookOptions.defaultColumn = defaultColumn || {};\n\n  var _useTable = useTable(_objectSpread({\n    columns: columns,\n    data: data,\n    // use the skipPageReset option to disable page resetting temporarily\n    autoResetPage: !skipPageReset,\n    updateData: updateData\n  }, hookOptions), useColumnOrder, useFilters, useGlobalFilter, useSortBy, usePagination, useRowSelect, extraHook),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      prepareRow = _useTable.prepareRow,\n      page = _useTable.page,\n      canPreviousPage = _useTable.canPreviousPage,\n      canNextPage = _useTable.canNextPage,\n      pageOptions = _useTable.pageOptions,\n      pageCount = _useTable.pageCount,\n      gotoPage = _useTable.gotoPage,\n      nextPage = _useTable.nextPage,\n      previousPage = _useTable.previousPage,\n      setGlobalFilter = _useTable.setGlobalFilter,\n      setPageSize = _useTable.setPageSize,\n      selectedFlatRows = _useTable.selectedFlatRows,\n      visibleColumns = _useTable.visibleColumns,\n      preGlobalFilteredRows = _useTable.preGlobalFilteredRows,\n      state = _useTable.state;\n\n  var pageIndex = state.pageIndex,\n      pageSize = state.pageSize,\n      selectedRowIds = state.selectedRowIds;\n  var spring = React.useMemo(function () {\n    return {\n      type: 'spring',\n      damping: 50,\n      stiffness: 100\n    };\n  }, []); // Render the UI for your table\n\n  return __jsx(React.Fragment, null, __jsx(\"table\", getTableProps(), __jsx(\"thead\", null, headerGroups.map(function (headerGroup) {\n    return __jsx(\"tr\", headerGroup.getHeaderGroupProps(), headerGroup.headers.map(function (column) {\n      return __jsx(motion.th, column.getHeaderProps({\n        layoutTransition: spring,\n        style: {}\n      }), __jsx(\"div\", column.getSortByToggleProps(), renderHeader ? renderHeader(column) : __jsx(React.Fragment, null, column.render('Header'), __jsx(\"span\", null, column.isSorted ? column.isSortedDesc ? ' 🔽' : ' 🔼' : ''))), __jsx(\"div\", null, column.canFilter ? renderFilter ? renderFilter(column) : column.render('Filter') : null));\n    }));\n  }), (globalFilter === null || globalFilter === void 0 ? void 0 : globalFilter.use) && __jsx(\"tr\", null, __jsx(\"th\", {\n    colSpan: visibleColumns.length,\n    style: {\n      textAlign: 'left'\n    }\n  }, __jsx(GlobalFilter, {\n    preGlobalFilteredRows: preGlobalFilteredRows,\n    globalFilter: state.globalFilter,\n    setGlobalFilter: setGlobalFilter\n  })))), __jsx(\"tbody\", getTableBodyProps(), __jsx(AnimatePresence, null, page.map(function (row, i) {\n    prepareRow(row);\n    return renderTableRow ? renderTableRow(row) : __jsx(motion.tr, row.getRowProps({\n      layoutTransition: spring,\n      exit: {\n        opacity: 0,\n        maxHeight: 0\n      }\n    }), row.cells.map(function (cell, i) {\n      return __jsx(motion.td, cell.getCellProps({\n        layoutTransition: spring\n      }), renderTableBody ? renderTableCell(cell) : cell.render('Cell'));\n    }));\n  })))), __jsx(\"div\", {\n    className: \"pagination\"\n  }, __jsx(\"button\", {\n    onClick: function onClick() {\n      return gotoPage(0);\n    },\n    disabled: !canPreviousPage\n  }, '<<'), ' ', __jsx(\"button\", {\n    onClick: function onClick() {\n      return previousPage();\n    },\n    disabled: !canPreviousPage\n  }, '<'), ' ', __jsx(\"button\", {\n    onClick: function onClick() {\n      return nextPage();\n    },\n    disabled: !canNextPage\n  }, '>'), ' ', __jsx(\"button\", {\n    onClick: function onClick() {\n      return gotoPage(pageCount - 1);\n    },\n    disabled: !canNextPage\n  }, '>>'), ' ', __jsx(\"span\", null, \"Page\", ' ', __jsx(\"strong\", null, pageIndex + 1, \" of \", pageOptions.length), ' '), __jsx(\"span\", null, \"| Go to page:\", ' ', __jsx(\"input\", {\n    type: \"number\",\n    defaultValue: pageIndex + 1,\n    onChange: function onChange(e) {\n      var page = e.target.value ? Number(e.target.value) - 1 : 0;\n      gotoPage(page);\n    },\n    style: {\n      width: '100px'\n    }\n  })), ' ', __jsx(\"select\", {\n    value: pageSize,\n    onChange: function onChange(e) {\n      setPageSize(Number(e.target.value));\n    }\n  }, [10, 20, 30, 40, 50].map(function (pageSize) {\n    return __jsx(\"option\", {\n      key: pageSize,\n      value: pageSize\n    }, \"Show \", pageSize);\n  }))), __jsx(\"pre\", null, __jsx(\"code\", null, JSON.stringify({\n    state: state,\n    selectedRowIds: selectedRowIds,\n    'selectedFlatRows[].original': selectedFlatRows.map(function (d) {\n      return d.original;\n    })\n  }, null, 2))));\n}\n\n_s4(Table, \"bRSySUf2yVXwcmDOCyxnbOEWCOc=\", false, function () {\n  return [useTable];\n});\n\n_c6 = Table;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Styles\");\n$RefreshReg$(_c2, \"GlobalFilter\");\n$RefreshReg$(_c3, \"DefaultColumnFilter\");\n$RefreshReg$(_c4, \"SelectColumnFilter\");\n$RefreshReg$(_c5, \"TableComponent\");\n$RefreshReg$(_c6, \"Table\");","map":{"version":3,"sources":["/mnt/c/Users/arash/Documents/DevInDoc/Getaboard/demoEmail/reward-test/src/components/Table.tsx"],"names":["React","useEffect","useState","useTable","usePagination","useRowSelect","useSortBy","useFilters","useColumnOrder","useGlobalFilter","useAsyncDebounce","motion","AnimatePresence","matchSorter","styled","Styles","div","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","length","value","setValue","onChange","undefined","e","target","fontSize","border","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","SelectColumnFilter","id","options","useMemo","Set","forEach","row","add","values","map","option","i","fuzzyTextFilterFn","rows","keys","autoRemove","val","TableComponent","columns","data","setData","editableFields","skipPageReset","setSkipPageReset","updateData","rowIndex","columnId","old","index","Table","renderHeader","renderFilter","renderTableBody","renderTableRow","renderTableCell","customHook","filterTypes","defaultColumn","extraHook","hooks","visibleColumns","push","hookOptions","autoResetPage","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","selectedFlatRows","state","pageIndex","pageSize","selectedRowIds","spring","type","damping","stiffness","headerGroup","getHeaderGroupProps","headers","getHeaderProps","layoutTransition","style","getSortByToggleProps","render","isSorted","isSortedDesc","canFilter","use","textAlign","getRowProps","exit","opacity","maxHeight","cells","cell","getCellProps","Number","width","JSON","stringify","d","original"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport clsx from 'clsx'\nimport {\n  useTable,\n  usePagination,\n  useRowSelect,\n  useSortBy,\n  useFilters,\n  useColumnOrder,\n  useGlobalFilter,\n  useAsyncDebounce,\n} from 'react-table'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport matchSorter from 'match-sorter'\n\nimport styled from 'styled-components'\nimport Input from './Input'\nimport Checkbox from './Checkbox'\n\nexport interface Props {\n  className?: string | Record<string, unknown>\n  ordered?: boolean\n  item?: boolean\n}\n\nexport interface gFilterProps {\n  preGlobalFilteredRows: unknown\n  globalFilter: unknown\n  setGlobalFilter: unknown\n}\n\nexport type gFilterState = unknown\n\nexport type filterColumnProps = unknown\n\nexport type FilterType = {\n  fuzzyText: unknown\n  text: (rows: unknown, id: unknown, filterValue: unknown) => unknown\n}\n\nexport type DefaultColumn = {\n  Filter?: ({\n    column: { filterValue, preFilteredRows, setFilter },\n  }: {\n    column: {\n      filterValue: unknown\n      preFilteredRows: unknown\n      setFilter: unknown\n    }\n  }) => JSX.Element\n  Cell?: ({\n    value: initialValue,\n    row: { index },\n    column,\n    updateData,\n    ...rest\n  }: {\n    [x: string]: unknown\n    value: unknown\n    row: {\n      index: unknown\n    }\n    column: unknown\n    updateData: (index, id, value) => unknown\n  }) => unknown\n}\n\nexport type GlobalFilter = {\n  use: boolean\n  component: React.Component<gFilterProps, gFilterState>\n}\n\nexport interface TableOptions {\n  filterTypes?: FilterType\n  defaultColumn?: DefaultColumn\n  globalFilter?: GlobalFilter\n}\n\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n\n      input {\n        font-size: 1rem;\n        padding: 0;\n        margin: 0;\n        border: 0;\n      }\n    }\n\n    .pagination {\n      padding: 0.5rem;\n    }\n  }\n`\n\n// Define a default UI for filtering\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter,\n}) {\n  const count = preGlobalFilteredRows.length\n  const [value, setValue] = React.useState(globalFilter)\n  const onChange = useAsyncDebounce((value) => {\n    setGlobalFilter(value || undefined)\n  }, 200)\n\n  return (\n    <span>\n      Search:{' '}\n      <input\n        value={value || ''}\n        onChange={(e) => {\n          setValue(e.target.value)\n          onChange(e.target.value)\n        }}\n        placeholder={`${count} records...`}\n        style={{\n          fontSize: '1.1rem',\n          border: '0',\n        }}\n      />\n    </span>\n  )\n}\n\n// Define a default UI for filtering\nfunction DefaultColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  const count = preFilteredRows.length\n\n  return (\n    <input\n      value={filterValue || ''}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\n      }}\n      placeholder={`Search ${count} records...`}\n    />\n  )\n}\n\n// This is a custom filter UI for selecting\n// a unique option from a list\nfunction SelectColumnFilter({\n  column: { filterValue, setFilter, preFilteredRows, id },\n}) {\n  // Calculate the options for filtering\n  // using the preFilteredRows\n  const options = React.useMemo(() => {\n    const options = new Set()\n    preFilteredRows.forEach((row) => {\n      options.add(row.values[id])\n    })\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    //@ts-ignore\n    return [...options.values()]\n  }, [id, preFilteredRows])\n\n  // Render a multi-select box\n  return (\n    <select\n      value={filterValue}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined)\n      }}\n    >\n      <option value=\"\">All</option>\n      {options.map((option, i) => (\n        <option key={i} value={option}>\n          {option}\n        </option>\n      ))}\n    </select>\n  )\n}\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] })\n}\n\n// Let the table remove the filter if the string is empty\nfuzzyTextFilterFn.autoRemove = (val) => !val\n\nfunction TableComponent({\n  columns,\n  data,\n  setData,\n  editableFields,\n}: {\n  editableFields?: Array<unknown>\n  columns: {\n    Header?: string\n    columns: {\n      Header: string\n      accessor: string\n      Cell?: unknown\n    }[]\n  }[]\n  data: Record<string, unknown>\n  setData: React.Dispatch<unknown>\n}) {\n  const [skipPageReset, setSkipPageReset] = useState(false)\n\n  // We need to keep the table from resetting the pageIndex when we\n  // Update data. So we can keep track of that flag with a ref.\n\n  // When our cell renderer calls updateMyData, we'll use\n  // the rowIndex, columnId and new value to update the\n  // original data\n  const updateData = (rowIndex, columnId, value) => {\n    // We also turn on the flag to not reset the page\n    setSkipPageReset(true)\n    setData((old) =>\n      old.map((row, index) => {\n        if (index === rowIndex) {\n          return {\n            ...old[rowIndex],\n            [columnId]: value,\n          }\n        }\n        return row\n      })\n    )\n  }\n\n  // After data chagnes, we turn the flag back off\n  // so that if data actually changes when we're not\n  // editing it, the page is reset\n  useEffect(() => {\n    setSkipPageReset(false)\n  }, [data])\n\n  return (\n    <Styles>\n      <Table\n        columns={columns}\n        data={data}\n        updateData={updateData}\n        skipPageReset={skipPageReset}\n        editableFields={editableFields}\n      />\n    </Styles>\n  )\n}\n\nexport default TableComponent\n\n// Be sure to pass our updateData and the skipPageReset option\nfunction Table({\n  columns,\n  data,\n  updateData,\n  renderHeader,\n  renderFilter,\n  renderTableBody,\n  renderTableRow,\n  renderTableCell,\n  skipPageReset,\n  customHook,\n  options,\n}) {\n  const { filterTypes, defaultColumn, globalFilter }: TableOptions =\n    options || {}\n\n  let extraHook = (hooks) => {\n    hooks.visibleColumns.push((columns) => [...columns])\n  }\n  if (customHook) extraHook = customHook\n\n  let hookOptions: {\n    filterTypes?: FilterType\n    defaultColumn?: DefaultColumn\n  }\n\n  if (filterTypes) hookOptions.filterTypes = filterTypes\n  if (defaultColumn) hookOptions.defaultColumn = defaultColumn || {}\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setGlobalFilter,\n    // setGlobalFilteredRows,\n    setPageSize,\n    selectedFlatRows,\n    visibleColumns,\n    preGlobalFilteredRows,\n    // setColumnOrder,\n    state,\n  } = useTable(\n    {\n      columns,\n      data,\n      // use the skipPageReset option to disable page resetting temporarily\n      autoResetPage: !skipPageReset,\n      updateData,\n      ...hookOptions,\n    },\n    useColumnOrder,\n    useFilters,\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n    useRowSelect,\n    extraHook\n  )\n\n  const { pageIndex, pageSize, selectedRowIds } = state\n\n  const spring = React.useMemo(\n    () => ({\n      type: 'spring',\n      damping: 50,\n      stiffness: 100,\n    }),\n    []\n  )\n\n  // Render the UI for your table\n  return (\n    <>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <motion.th\n                  {...column.getHeaderProps({\n                    layoutTransition: spring,\n                    style: {},\n                  })}\n                >\n                  <div {...column.getSortByToggleProps()}>\n                    {renderHeader ? (\n                      renderHeader(column)\n                    ) : (\n                      <>\n                        {column.render('Header')}\n                        <span>\n                          {column.isSorted\n                            ? column.isSortedDesc\n                              ? ' 🔽'\n                              : ' 🔼'\n                            : ''}\n                        </span>\n                      </>\n                    )}\n                  </div>\n                  <div>\n                    {column.canFilter\n                      ? renderFilter\n                        ? renderFilter(column)\n                        : column.render('Filter')\n                      : null}\n                  </div>\n                </motion.th>\n              ))}\n            </tr>\n          ))}\n          {globalFilter?.use && (\n            <tr>\n              <th\n                colSpan={visibleColumns.length}\n                style={{\n                  textAlign: 'left',\n                }}\n              >\n                <GlobalFilter\n                  preGlobalFilteredRows={preGlobalFilteredRows}\n                  globalFilter={state.globalFilter}\n                  setGlobalFilter={setGlobalFilter}\n                />\n              </th>\n            </tr>\n          )}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          <AnimatePresence>\n            {page.map((row, i) => {\n              prepareRow(row)\n              return renderTableRow ? (\n                renderTableRow(row)\n              ) : (\n                <motion.tr\n                  {...row.getRowProps({\n                    layoutTransition: spring,\n                    exit: { opacity: 0, maxHeight: 0 },\n                  })}\n                >\n                  {row.cells.map((cell, i) => {\n                    return (\n                      <motion.td\n                        {...cell.getCellProps({\n                          layoutTransition: spring,\n                        })}\n                      >\n                        {renderTableBody\n                          ? renderTableCell(cell)\n                          : cell.render('Cell')}\n                      </motion.td>\n                    )\n                  })}\n                </motion.tr>\n              )\n            })}\n          </AnimatePresence>\n        </tbody>\n      </table>\n      <div className=\"pagination\">\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {'<<'}\n        </button>{' '}\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n          {'<'}\n        </button>{' '}\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n          {'>'}\n        </button>{' '}\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n          {'>>'}\n        </button>{' '}\n        <span>\n          Page{' '}\n          <strong>\n            {pageIndex + 1} of {pageOptions.length}\n          </strong>{' '}\n        </span>\n        <span>\n          | Go to page:{' '}\n          <input\n            type=\"number\"\n            defaultValue={pageIndex + 1}\n            onChange={(e) => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\n              gotoPage(page)\n            }}\n            style={{\n              width: '100px',\n            }}\n          />\n        </span>{' '}\n        <select\n          value={pageSize}\n          onChange={(e) => {\n            setPageSize(Number(e.target.value))\n          }}\n        >\n          {[10, 20, 30, 40, 50].map((pageSize) => (\n            <option key={pageSize} value={pageSize}>\n              Show {pageSize}\n            </option>\n          ))}\n        </select>\n      </div>\n      <pre>\n        <code>\n          {JSON.stringify(\n            {\n              state,\n              selectedRowIds: selectedRowIds,\n              'selectedFlatRows[].original': selectedFlatRows.map(\n                (d) => d.original\n              ),\n            },\n            null,\n            2\n          )}\n        </code>\n      </pre>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}