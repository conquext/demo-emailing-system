{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport XLSX from 'xlsx';\nimport matchSorter from 'match-sorter';\nimport { FiMoreHorizontal } from 'react-icons/fi';\nimport { FaCloudUploadAlt } from 'react-icons/fa';\nimport { SiMinutemailer } from 'react-icons/si';\nimport { MdMore, MdDelete } from 'react-icons/md';\nimport Layout from '@components/layout/Layout';\nimport TableComponent, { useAsyncDebounce } from '@components/Table';\nimport makeData from '@utils/helpers';\nimport Checkbox from '@components/Checkbox';\nimport Dropdown from '@components/Dropdown';\nimport Button from '@components/Button';\nimport UploadComponent from '@components/FileUpload';\nimport { inviteUser } from '@utils/api';\nconst editableFields = ['firstName', 'lastName', 'email'];\n\nconst headerSearch = () => {\n  return __jsx(\"div\", {\n    className: \"flex justify-start\",\n    style: {\n      width: '55%'\n    }\n  }, __jsx(\"p\", null, \"an header search here\"));\n};\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, {\n    keys: [row => row.values[id]]\n  });\n} // Let the table remove the filter if the string is empty\n\n\nfuzzyTextFilterFn.autoRemove = val => !val; // Create an editable cell renderer\n\n\nconst EditableCell = ({\n  value: initialValue,\n  row: {\n    index\n  },\n  column: {\n    id\n  },\n  updateData // This is a custom function that we supplied to our table instance\n\n}) => {\n  // We need to keep and update the state of the cell normally\n  const {\n    0: value,\n    1: setValue\n  } = useState(initialValue);\n\n  const onChange = e => {\n    setValue(e.target.value);\n  }; // We'll only update the external data when the input is blurred\n\n\n  const onBlur = () => {\n    updateData(index, id, value);\n  }; // If the initialValue is changed external, sync it up with our state\n\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n  return editableFields.includes(id) ? __jsx(\"input\", {\n    value: value,\n    onChange: onChange,\n    onBlur: onBlur,\n    className: \"w-full bg-transparent focus:bg-white\"\n  }) : __jsx(\"div\", {\n    className: \"\"\n  }, value);\n}; // Define a default UI for filtering\n\n\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter\n}) {\n  const count = preGlobalFilteredRows.length;\n  const {\n    0: value,\n    1: setValue\n  } = useState(globalFilter);\n  const onChange = useAsyncDebounce(value => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n  return __jsx(\"span\", null, \"Search:\", ' ', __jsx(\"input\", {\n    value: value || '',\n    onChange: e => {\n      setValue(e.target.value);\n      onChange(e.target.value);\n    },\n    placeholder: `${count} records...`,\n    style: {\n      fontSize: '1.1rem',\n      border: '0'\n    }\n  }));\n} // Define a UI for filtering\n\n\nfunction DefaultColumnFilter({\n  column: {\n    filterValue,\n    preFilteredRows,\n    setFilter\n  }\n}) {\n  const count = preFilteredRows.length;\n  return __jsx(\"input\", {\n    value: filterValue || '',\n    onChange: e => {\n      setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n    },\n    placeholder: `Search ${count} records...`\n  });\n}\n\nconst sendInvite = (e, data) => {\n  e.stopPropagation();\n  console.log('we are sending the invite to', data);\n  inviteUser(data);\n};\n\nconst IndexPage = () => {\n  const {\n    0: data,\n    1: setData\n  } = useState(() => makeData(6));\n  const columns = useMemo(() => [{\n    Header: 'Table',\n    columns: [{\n      Header: 'First Name',\n      accessor: 'firstName'\n    }, {\n      Header: 'Last Name',\n      accessor: 'lastName'\n    }, {\n      Header: 'Email',\n      accessor: 'email'\n    }]\n  }, {\n    Header: 'Test Info',\n    columns: [{\n      Header: 'Invite Sent',\n      accessor: 'inviteSent'\n    }, {\n      Header: 'Test Sent',\n      accessor: 'testSent'\n    }, {\n      Header: 'Test Status',\n      accessor: 'testStatus'\n    }]\n  }], []);\n  const spring = React.useMemo(() => ({\n    type: 'spring',\n    damping: 50,\n    stiffness: 100\n  }), []);\n  const filterTypes = useMemo(() => ({\n    // Add a new fuzzyTextFilterFn filter type.\n    fuzzyText: fuzzyTextFilterFn,\n    // Or, override the default text filter to use\n    // \"startWith\"\n    text: (rows, id, filterValue) => {\n      return rows.filter(row => {\n        const rowValue = row.values[id];\n        return rowValue !== undefined ? String(rowValue).toLowerCase().startsWith(String(filterValue).toLowerCase()) : true;\n      });\n    }\n  }), []);\n\n  const uploadDatabase = (file, type) => {\n    switch (type) {\n      case 'spreadsheet':\n        //  var first_worksheet = workbook.Sheets[workbook.SheetNames[0]]\n        // var data = XLSX.utils.sheet_to_json(first_worksheet, { header: 1 })\n        // /* convert from array of arrays to workbook */\n        // var worksheet = XLSX.utils.aoa_to_sheet(data)\n        // var new_workbook = XLSX.utils.book_new()\n        // XLSX.utils.book_append_sheet(new_workbook, worksheet, 'SheetJS')\n        const f = file.selectedFile[0];\n        const reader = new FileReader();\n        const stateData = data;\n\n        reader.onload = function (e) {\n          const data = e.target.result;\n          const readedData = XLSX.read(data, {\n            type: 'binary'\n          });\n          const wsname = readedData.SheetNames[0];\n          const ws = readedData.Sheets[wsname];\n          /* Convert array to json*/\n          // const dataParse = XLSX.utils.sheet_to_json(ws, { header: 1 })\n\n          const dataParse = XLSX.utils.sheet_to_json(ws, {\n            raw: true\n          });\n          const fieldNames = ['Serial No', 'firstName', 'lastName', 'email', 'inviteSent', 'testSent', 'testStatus', 'subRows'];\n          const newDataSet = dataParse.map(d => {\n            const pos = Object.keys(d);\n            fieldNames.forEach((name, i) => {\n              if (name !== 'Serial No') {\n                d[name] = d[name] || d[pos[i]] || '';\n                d[name] = String(d[name]);\n              }\n\n              if (name === 'subRows') d[name] = undefined;\n            });\n            return d;\n          });\n          const update = newDataSet.concat(stateData);\n          setData(update);\n        };\n\n        reader.readAsBinaryString(f);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const deleteRecord = row => {\n    console.log('deleting', row);\n  };\n\n  const defaultColumn = React.useMemo(() => ({\n    // Let's set up our Filter UI\n    Filter: DefaultColumnFilter,\n    Cell: EditableCell\n  }), []);\n\n  const renderTableSelect = hooks => {\n    hooks.visibleColumns.push(columns => [// Let's make a column for selection\n    {\n      id: 'selection',\n      // The header can use the table's getToggleAllRowsSelectedProps method\n      // to render a checkbox\n      Header: ({\n        getToggleAllPageRowsSelectedProps\n      }) => __jsx(\"div\", null, __jsx(Checkbox, getToggleAllPageRowsSelectedProps())),\n      // The cell can use the individual row's getToggleRowSelectedProps method\n      // to the render a checkbox\n      Cell: ({\n        row\n      }) => __jsx(\"div\", null, __jsx(Checkbox, row.getToggleRowSelectedProps()))\n    }, ...columns, {\n      id: 'deletion',\n      // The header can use the table's getToggleAllRowsSelectedProps method\n      // to render a checkbox\n      Header: ({\n        getToggleAllPageRowsSelectedProps\n      }) => __jsx(\"div\", null),\n      // The cell can use the individual row's getToggleRowSelectedProps method\n      // to the render a checkbox\n      Cell: ({\n        row\n      }) => __jsx(\"div\", _extends({}, row.getToggleRowSelectedProps(), {\n        onClick: deleteRecord(row)\n      }), __jsx(MdDelete, row.getToggleRowSelectedProps()))\n    }]);\n  };\n\n  const renderTableHeader = column => {\n    const header = column.render('Header');\n    return __jsx(React.Fragment, null, header);\n  };\n\n  const renderTableRow = (page, prepareRow) => {\n    const renderTableCell = cell => {\n      if (cell.column.id === 'inviteSent') {\n        var _cell$row, _cell$row$values, _cell$row$values$invi;\n\n        if (((_cell$row = cell.row) === null || _cell$row === void 0 ? void 0 : (_cell$row$values = _cell$row.values) === null || _cell$row$values === void 0 ? void 0 : (_cell$row$values$invi = _cell$row$values.inviteSent) === null || _cell$row$values$invi === void 0 ? void 0 : _cell$row$values$invi.toLowerCase()) === 'no') return __jsx(\"div\", {\n          className: \"z-50 inline-flex items-center justify-center w-full h-full align-middle group\"\n        }, __jsx(\"span\", {\n          className: \"text-red-600\"\n        }, cell.render('Cell')), __jsx(\"span\", {\n          className: \"hidden align-middle group-focus:flex group-hover:flex align-center\"\n        }, __jsx(Dropdown, {\n          buttonLabel: __jsx(FiMoreHorizontal, {\n            className: \"flex self-center opacity-50\"\n          }),\n          className: \"z-20 ml-4\"\n        }, __jsx(\"ul\", {\n          className: \"w-40 py-2 space-y-4 text-sm\"\n        }, __jsx(\"li\", null, __jsx(\"span\", {\n          className: \"cursor-pointer text-primary hover:underline\",\n          title: \"components\",\n          onClick: e => sendInvite(e, cell.row.values)\n        }, __jsx(SiMinutemailer, {\n          className: \"inline ml-6 mr-4\"\n        }), \"Send Invite\")), __jsx(\"li\", null, __jsx(\"hr\", {\n          className: \"dark:border-gray-700\"\n        })), __jsx(\"li\", {\n          className: \"cursor-not-allowed\"\n        }, __jsx(\"span\", {\n          className: \"text-primary hover:underline\",\n          title: \"Typography\"\n        }, __jsx(MdMore, {\n          className: \"inline ml-6 mr-4 \"\n        }), \"More Options\"))))));else return __jsx(\"div\", {\n          className: \"inline-flex items-center justify-center w-full align-middle group\"\n        }, __jsx(\"span\", {\n          className: \"text-green-600\"\n        }, cell.render('Cell')));\n      }\n\n      if (cell.column.id === 'testSent') {\n        var _cell$row$values2, _cell$row$values2$tes;\n\n        if (((_cell$row$values2 = cell.row.values) === null || _cell$row$values2 === void 0 ? void 0 : (_cell$row$values2$tes = _cell$row$values2.testSent) === null || _cell$row$values2$tes === void 0 ? void 0 : _cell$row$values2$tes.toLowerCase()) === 'no') return __jsx(\"div\", {\n          className: \"inline-flex items-center justify-center w-full text-red-600\"\n        }, cell.render('Cell'));else return __jsx(\"div\", {\n          className: \"inline-flex items-center justify-center w-full text-green-600\"\n        }, cell.render('Cell'));\n      }\n\n      if (cell.column.id === 'testStatus') {\n        var _cell$row2, _cell$row2$values, _cell$row2$values$tes;\n\n        if (((_cell$row2 = cell.row) === null || _cell$row2 === void 0 ? void 0 : (_cell$row2$values = _cell$row2.values) === null || _cell$row2$values === void 0 ? void 0 : (_cell$row2$values$tes = _cell$row2$values.testStatus) === null || _cell$row2$values$tes === void 0 ? void 0 : _cell$row2$values$tes.toLowerCase()) === 'pending') return __jsx(\"div\", {\n          className: \"inline-flex items-center justify-center w-full text-yellow-700\"\n        }, cell.render('Cell'));else return __jsx(\"div\", {\n          className: \"inline-flex items-center justify-center w-full text-green-600\"\n        }, cell.render('Cell'));\n      }\n\n      return cell.render('Cell');\n    };\n\n    return __jsx(React.Fragment, null, page.map((row, i1) => {\n      prepareRow(row);\n      return __jsx(motion.tr, _extends({}, row.getRowProps({\n        layoutTransition: spring,\n        exit: {\n          opacity: 0,\n          maxHeight: 0\n        }\n      }), {\n        className: `${i1 % 2 ? 'bg-gray-400' : ''} h-16`\n      }), row.cells.map((cell, i) => {\n        return __jsx(motion.td, cell.getCellProps({\n          layoutTransition: spring\n        }), renderTableCell ? renderTableCell(cell) : cell.render('Cell'));\n      }));\n    }));\n  };\n\n  const handleBatchActions = controls => {\n    const {\n      state: tableState,\n      selectedFlatRows\n    } = controls;\n    const {\n      selectedRowIds\n    } = tableState;\n    const selectedLen = Object.keys(selectedRowIds || {}).length;\n    const selectedMembers = selectedFlatRows.map(d => d.original);\n    const uninvitedMembers = selectedMembers.filter(d => {\n      var _d$testSent;\n\n      return ((_d$testSent = d['testSent']) === null || _d$testSent === void 0 ? void 0 : _d$testSent.toLowerCase()) !== 'no';\n    });\n    const uninvitedLen = uninvitedMembers.length;\n    return __jsx(\"div\", {\n      className: `flex ${selectedLen ? 'justify-between' : 'justify-end'} w-full mb-2`\n    }, selectedLen > 0 && __jsx(React.Fragment, null, __jsx(\"p\", null, \"You have selected \", selectedLen, \" members\"), uninvitedLen > 0 && __jsx(\"div\", null, __jsx(Button, {\n      onClick: e => sendInvite(e, uninvitedMembers)\n    }, \"Send Invitation to \", uninvitedLen, \" members\"))), !selectedLen && __jsx(React.Fragment, null, __jsx(UploadComponent, {\n      allowedExtensions: ['xls', 'xlsx', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'] // autoUpload={true}\n      ,\n      render: el => {\n        return __jsx(\"span\", {\n          className: \"flex justify-end w-full px-4 py-2 border cursor-pointer hover:text-primary-lighter hover:border-primary-darker text-primary\",\n          onClick: e => {\n            e.preventDefault();\n            el && el.click();\n          }\n        }, __jsx(FaCloudUploadAlt, {\n          className: \"w-6 h-6 mr-2\"\n        }), \"Upload SpreadSheet\");\n      },\n      uploadHandler: (data, state, cb) => {\n        uploadDatabase(state, 'spreadsheet');\n      }\n    })));\n  };\n\n  useEffect(() => {\n    function copyToClipboard(text) {\n      const input = document.createElement('input');\n      input.setAttribute('value', text);\n      document.body.appendChild(input);\n      input.select();\n      const result = document.execCommand('copy');\n      document.body.removeChild(input);\n      return result;\n    }\n\n    copyToClipboard(JSON.stringify(data));\n  }, []);\n  return __jsx(Layout, {\n    title: \"Your Awesome App\",\n    className: \"container max-w-5xl py-8 overflow-auto\",\n    header: headerSearch()\n  }, __jsx(\"p\", {\n    className: \"mb-4 text-lg font-light\"\n  }, \"Demo spreadsheet upload and email list system.\"), __jsx(\"div\", null, __jsx(TableComponent, {\n    columns: columns,\n    data: data,\n    setData: setData,\n    tableClassName: \"w-full\",\n    filterTypes: filterTypes,\n    defaultColumn: defaultColumn,\n    globalFilter: {\n      use: false,\n      Component: GlobalFilter\n    },\n    renderHeader: renderTableHeader // renderFilter= {(column: unknown) => JSX.Element}\n    // renderTableBody={renderTableBody}\n    ,\n    renderTableRow: renderTableRow // renderTableCell= {(cell: unknown) => JSX.Element}\n    ,\n    handleTableControls: {\n      jsx: handleBatchActions\n    },\n    customHook: renderTableSelect\n  })));\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/mnt/c/Users/arash/Documents/DevInDoc/Getaboard/demoEmail/reward-test/pages/index.tsx"],"names":["React","useEffect","useMemo","useState","motion","XLSX","matchSorter","FiMoreHorizontal","FaCloudUploadAlt","SiMinutemailer","MdMore","MdDelete","Layout","TableComponent","useAsyncDebounce","makeData","Checkbox","Dropdown","Button","UploadComponent","inviteUser","editableFields","headerSearch","width","fuzzyTextFilterFn","rows","id","filterValue","keys","row","values","autoRemove","val","EditableCell","value","initialValue","index","column","updateData","setValue","onChange","e","target","onBlur","includes","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","length","undefined","fontSize","border","DefaultColumnFilter","preFilteredRows","setFilter","sendInvite","data","stopPropagation","console","log","IndexPage","setData","columns","Header","accessor","spring","type","damping","stiffness","filterTypes","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","uploadDatabase","file","f","selectedFile","reader","FileReader","stateData","onload","result","readedData","read","wsname","SheetNames","ws","Sheets","dataParse","utils","sheet_to_json","raw","fieldNames","newDataSet","map","d","pos","Object","forEach","name","i","update","concat","readAsBinaryString","deleteRecord","defaultColumn","Filter","Cell","renderTableSelect","hooks","visibleColumns","push","getToggleAllPageRowsSelectedProps","getToggleRowSelectedProps","renderTableHeader","header","render","renderTableRow","page","prepareRow","renderTableCell","cell","inviteSent","testSent","testStatus","i1","getRowProps","layoutTransition","exit","opacity","maxHeight","cells","getCellProps","handleBatchActions","controls","state","tableState","selectedFlatRows","selectedRowIds","selectedLen","selectedMembers","original","uninvitedMembers","uninvitedLen","el","preventDefault","click","cb","copyToClipboard","input","document","createElement","setAttribute","body","appendChild","select","execCommand","removeChild","JSON","stringify","use","Component","jsx"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\nimport { NextPage } from 'next'\nimport { motion } from 'framer-motion'\nimport XLSX from 'xlsx'\nimport matchSorter from 'match-sorter'\nimport { ToastContainer, toast } from 'react-toastify'\n\nimport { FiMoreHorizontal } from 'react-icons/fi'\nimport { FaCloudUploadAlt } from 'react-icons/fa'\nimport { SiMinutemailer } from 'react-icons/si'\nimport { MdMore, MdDelete } from 'react-icons/md'\nimport Layout from '@components/layout/Layout'\nimport TableComponent, { useAsyncDebounce } from '@components/Table'\nimport makeData from '@utils/helpers'\nimport Checkbox from '@components/Checkbox'\nimport Dropdown from '@components/Dropdown'\nimport Button from '@components/Button'\nimport UploadComponent from '@components/FileUpload'\nimport { inviteUser } from '@utils/api'\n\nconst editableFields = ['firstName', 'lastName', 'email']\n\nconst headerSearch = () => {\n  return (\n    <div className=\"flex justify-start\" style={{ width: '55%' }}>\n      <p>an header search here</p>\n    </div>\n  )\n}\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] })\n}\n\n// Let the table remove the filter if the string is empty\nfuzzyTextFilterFn.autoRemove = (val) => !val\n\n// Create an editable cell renderer\nconst EditableCell = ({\n  value: initialValue,\n  row: { index },\n  column: { id },\n  updateData, // This is a custom function that we supplied to our table instance\n}) => {\n  // We need to keep and update the state of the cell normally\n  const [value, setValue] = useState(initialValue)\n\n  const onChange = (e) => {\n    setValue(e.target.value)\n  }\n\n  // We'll only update the external data when the input is blurred\n  const onBlur = () => {\n    updateData(index, id, value)\n  }\n\n  // If the initialValue is changed external, sync it up with our state\n  useEffect(() => {\n    setValue(initialValue)\n  }, [initialValue])\n\n  return editableFields.includes(id) ? (\n    <input\n      value={value}\n      onChange={onChange}\n      onBlur={onBlur}\n      className=\"w-full bg-transparent focus:bg-white\"\n    />\n  ) : (\n    <div className=\"\">{value}</div>\n  )\n}\n\n// Define a default UI for filtering\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter,\n}) {\n  const count = preGlobalFilteredRows.length\n  const [value, setValue] = useState(globalFilter)\n  const onChange = useAsyncDebounce((value) => {\n    setGlobalFilter(value || undefined)\n  }, 200)\n\n  return (\n    <span>\n      Search:{' '}\n      <input\n        value={value || ''}\n        onChange={(e) => {\n          setValue(e.target.value)\n          onChange(e.target.value)\n        }}\n        placeholder={`${count} records...`}\n        style={{\n          fontSize: '1.1rem',\n          border: '0',\n        }}\n      />\n    </span>\n  )\n}\n\n// Define a UI for filtering\nfunction DefaultColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  const count = preFilteredRows.length\n\n  return (\n    <input\n      value={filterValue || ''}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\n      }}\n      placeholder={`Search ${count} records...`}\n    />\n  )\n}\n\nconst sendInvite = (e, data) => {\n  e.stopPropagation()\n  console.log('we are sending the invite to', data)\n  inviteUser(data)\n}\n\nconst IndexPage: NextPage = () => {\n  const [data, setData] = useState(() => makeData(6))\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'Table',\n        columns: [\n          {\n            Header: 'First Name',\n            accessor: 'firstName',\n          },\n          {\n            Header: 'Last Name',\n            accessor: 'lastName',\n          },\n          {\n            Header: 'Email',\n            accessor: 'email',\n          },\n        ],\n      },\n      {\n        Header: 'Test Info',\n        columns: [\n          {\n            Header: 'Invite Sent',\n            accessor: 'inviteSent',\n          },\n          {\n            Header: 'Test Sent',\n            accessor: 'testSent',\n          },\n          {\n            Header: 'Test Status',\n            accessor: 'testStatus',\n          },\n        ],\n      },\n    ],\n    []\n  )\n  const spring = React.useMemo(\n    () => ({\n      type: 'spring',\n      damping: 50,\n      stiffness: 100,\n    }),\n    []\n  )\n  const filterTypes = useMemo(\n    () => ({\n      // Add a new fuzzyTextFilterFn filter type.\n      fuzzyText: fuzzyTextFilterFn,\n      // Or, override the default text filter to use\n      // \"startWith\"\n      text: (rows, id, filterValue) => {\n        return rows.filter((row) => {\n          const rowValue = row.values[id]\n          return rowValue !== undefined\n            ? String(rowValue)\n                .toLowerCase()\n                .startsWith(String(filterValue).toLowerCase())\n            : true\n        })\n      },\n    }),\n    []\n  )\n\n  const uploadDatabase = (file, type) => {\n    switch (type) {\n      case 'spreadsheet':\n        //  var first_worksheet = workbook.Sheets[workbook.SheetNames[0]]\n        // var data = XLSX.utils.sheet_to_json(first_worksheet, { header: 1 })\n\n        // /* convert from array of arrays to workbook */\n        // var worksheet = XLSX.utils.aoa_to_sheet(data)\n        // var new_workbook = XLSX.utils.book_new()\n        // XLSX.utils.book_append_sheet(new_workbook, worksheet, 'SheetJS')\n        const f = file.selectedFile[0]\n        const reader = new FileReader()\n        const stateData = data\n        reader.onload = function (e) {\n          const data = e.target.result\n          const readedData = XLSX.read(data, { type: 'binary' })\n          const wsname = readedData.SheetNames[0]\n          const ws = readedData.Sheets[wsname]\n\n          /* Convert array to json*/\n          // const dataParse = XLSX.utils.sheet_to_json(ws, { header: 1 })\n          const dataParse = XLSX.utils.sheet_to_json(ws, { raw: true })\n\n          const fieldNames = [\n            'Serial No',\n            'firstName',\n            'lastName',\n            'email',\n            'inviteSent',\n            'testSent',\n            'testStatus',\n            'subRows',\n          ]\n          const newDataSet = dataParse.map((d) => {\n            const pos = Object.keys(d)\n            fieldNames.forEach((name, i) => {\n              if (name !== 'Serial No') {\n                d[name] = d[name] || d[pos[i]] || ''\n                d[name] = String(d[name])\n              }\n              if (name === 'subRows') d[name] = undefined\n            })\n            return d\n          })\n          const update = newDataSet.concat(stateData)\n\n          setData(update)\n        }\n        reader.readAsBinaryString(f)\n        break\n\n      default:\n        break\n    }\n  }\n\n  const deleteRecord = (row) => {\n    console.log('deleting', row)\n  }\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      // Let's set up our Filter UI\n      Filter: DefaultColumnFilter,\n      Cell: EditableCell,\n    }),\n    []\n  )\n\n  const renderTableSelect = (hooks) => {\n    hooks.visibleColumns.push((columns) => [\n      // Let's make a column for selection\n      {\n        id: 'selection',\n        // The header can use the table's getToggleAllRowsSelectedProps method\n        // to render a checkbox\n        Header: ({ getToggleAllPageRowsSelectedProps }) => (\n          <div>\n            <Checkbox {...getToggleAllPageRowsSelectedProps()} />\n          </div>\n        ),\n        // The cell can use the individual row's getToggleRowSelectedProps method\n        // to the render a checkbox\n        Cell: ({ row }) => (\n          <div>\n            <Checkbox {...row.getToggleRowSelectedProps()} />\n          </div>\n        ),\n      },\n      ...columns,\n      {\n        id: 'deletion',\n        // The header can use the table's getToggleAllRowsSelectedProps method\n        // to render a checkbox\n        Header: ({ getToggleAllPageRowsSelectedProps }) => <div></div>,\n        // The cell can use the individual row's getToggleRowSelectedProps method\n        // to the render a checkbox\n        Cell: ({ row }) => (\n          <div {...row.getToggleRowSelectedProps()} onClick={deleteRecord(row)}>\n            <MdDelete {...row.getToggleRowSelectedProps()} />\n          </div>\n        ),\n      },\n    ])\n  }\n\n  const renderTableHeader = (column) => {\n    const header = column.render('Header')\n    return <>{header}</>\n  }\n  const renderTableRow = (page, prepareRow) => {\n    const renderTableCell = (cell) => {\n      if (cell.column.id === 'inviteSent') {\n        if (cell.row?.values?.inviteSent?.toLowerCase() === 'no')\n          return (\n            <div className=\"z-50 inline-flex items-center justify-center w-full h-full align-middle group\">\n              <span className=\"text-red-600\">{cell.render('Cell')}</span>\n              <span className=\"hidden align-middle group-focus:flex group-hover:flex align-center\">\n                <Dropdown\n                  buttonLabel={\n                    <FiMoreHorizontal className=\"flex self-center opacity-50\" />\n                  }\n                  className=\"z-20 ml-4\"\n                >\n                  <ul className=\"w-40 py-2 space-y-4 text-sm\">\n                    <li>\n                      <span\n                        className=\"cursor-pointer text-primary hover:underline\"\n                        title=\"components\"\n                        onClick={(e) => sendInvite(e, cell.row.values)}\n                      >\n                        <SiMinutemailer className=\"inline ml-6 mr-4\" />\n                        Send Invite\n                      </span>\n                    </li>\n                    <li>\n                      <hr className=\"dark:border-gray-700\" />\n                    </li>\n                    <li className=\"cursor-not-allowed\">\n                      <span\n                        className=\"text-primary hover:underline\"\n                        title=\"Typography\"\n                      >\n                        <MdMore className=\"inline ml-6 mr-4 \" />\n                        More Options\n                      </span>\n                    </li>\n                  </ul>\n                </Dropdown>\n              </span>\n            </div>\n          )\n        else\n          return (\n            <div className=\"inline-flex items-center justify-center w-full align-middle group\">\n              <span className=\"text-green-600\">{cell.render('Cell')}</span>\n            </div>\n          )\n      }\n      if (cell.column.id === 'testSent') {\n        if (cell.row.values?.testSent?.toLowerCase() === 'no')\n          return (\n            <div className=\"inline-flex items-center justify-center w-full text-red-600\">\n              {cell.render('Cell')}\n            </div>\n          )\n        else\n          return (\n            <div className=\"inline-flex items-center justify-center w-full text-green-600\">\n              {cell.render('Cell')}\n            </div>\n          )\n      }\n      if (cell.column.id === 'testStatus') {\n        if (cell.row?.values?.testStatus?.toLowerCase() === 'pending')\n          return (\n            <div className=\"inline-flex items-center justify-center w-full text-yellow-700\">\n              {cell.render('Cell')}\n            </div>\n          )\n        else\n          return (\n            <div className=\"inline-flex items-center justify-center w-full text-green-600\">\n              {cell.render('Cell')}\n            </div>\n          )\n      }\n      return cell.render('Cell')\n    }\n    return (\n      <>\n        {page.map((row, i1) => {\n          prepareRow(row)\n          return (\n            <motion.tr\n              {...row.getRowProps({\n                layoutTransition: spring,\n                exit: { opacity: 0, maxHeight: 0 },\n              })}\n              className={`${i1 % 2 ? 'bg-gray-400' : ''} h-16`}\n            >\n              {row.cells.map((cell, i) => {\n                return (\n                  <motion.td\n                    {...cell.getCellProps({\n                      layoutTransition: spring,\n                    })}\n                    // className={`${\n                    //   i1 % 2 ? 'bg-gray-400 border-gray-400' : ''\n                    // } h-16`}\n                  >\n                    {renderTableCell\n                      ? renderTableCell(cell)\n                      : cell.render('Cell')}\n                  </motion.td>\n                )\n              })}\n            </motion.tr>\n          )\n        })}\n      </>\n    )\n  }\n\n  const handleBatchActions = (controls) => {\n    const { state: tableState, selectedFlatRows } = controls\n    const { selectedRowIds } = tableState\n    const selectedLen = Object.keys(selectedRowIds || {}).length\n\n    const selectedMembers = selectedFlatRows.map((d) => d.original)\n    const uninvitedMembers = selectedMembers.filter(\n      (d) => d['testSent']?.toLowerCase() !== 'no'\n    )\n    const uninvitedLen = uninvitedMembers.length\n\n    return (\n      <div\n        className={`flex ${\n          selectedLen ? 'justify-between' : 'justify-end'\n        } w-full mb-2`}\n      >\n        {selectedLen > 0 && (\n          <>\n            <p>You have selected {selectedLen} members</p>\n            {uninvitedLen > 0 && (\n              <div>\n                <Button onClick={(e) => sendInvite(e, uninvitedMembers)}>\n                  Send Invitation to {uninvitedLen} members\n                </Button>\n              </div>\n            )}\n          </>\n        )}\n        {!selectedLen && (\n          <>\n            <UploadComponent\n              allowedExtensions={[\n                'xls',\n                'xlsx',\n                'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n              ]}\n              // autoUpload={true}\n              render={(el: HTMLElement | null) => {\n                return (\n                  <span\n                    className=\"flex justify-end w-full px-4 py-2 border cursor-pointer hover:text-primary-lighter hover:border-primary-darker text-primary\"\n                    onClick={(e) => {\n                      e.preventDefault()\n                      el && el.click()\n                    }}\n                  >\n                    <FaCloudUploadAlt className=\"w-6 h-6 mr-2\" />\n                    Upload SpreadSheet\n                  </span>\n                )\n              }}\n              uploadHandler={(data: any, state: any, cb: any) => {\n                uploadDatabase(state, 'spreadsheet')\n              }}\n            />\n            {/* <Button\n              type=\"secondary\"\n              className=\"self-end\"\n              onClick={(e) =>\n                uploadDatabase(e, uninvitedMembers, 'spreadsheet')\n              }\n            >\n              Upload SpreadSheet\n            </Button> */}\n          </>\n        )}\n      </div>\n    )\n  }\n\n  useEffect(() => {\n    function copyToClipboard(text) {\n      const input = document.createElement('input')\n      input.setAttribute('value', text)\n      document.body.appendChild(input)\n      input.select()\n      const result = document.execCommand('copy')\n      document.body.removeChild(input)\n      return result\n    }\n    copyToClipboard(JSON.stringify(data))\n  }, [])\n\n  return (\n    <Layout\n      title=\"Your Awesome App\"\n      className=\"container max-w-5xl py-8 overflow-auto\"\n      header={headerSearch()}\n    >\n      {/* <ToastContainer /> */}\n\n      {/* <h1 className=\"mb-4 text-3xl font-black dark:text-gray-100\">Welcome</h1> */}\n      <p className=\"mb-4 text-lg font-light\">\n        Demo spreadsheet upload and email list system.\n      </p>\n      <div>\n        <TableComponent\n          columns={columns}\n          data={data}\n          setData={setData}\n          tableClassName=\"w-full\"\n          filterTypes={filterTypes}\n          defaultColumn={defaultColumn}\n          globalFilter={{ use: false, Component: GlobalFilter }}\n          renderHeader={renderTableHeader}\n          // renderFilter= {(column: unknown) => JSX.Element}\n          // renderTableBody={renderTableBody}\n          renderTableRow={renderTableRow}\n          // renderTableCell= {(cell: unknown) => JSX.Element}\n          handleTableControls={{ jsx: handleBatchActions }}\n          customHook={renderTableSelect}\n        />\n      </div>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"]},"metadata":{},"sourceType":"module"}