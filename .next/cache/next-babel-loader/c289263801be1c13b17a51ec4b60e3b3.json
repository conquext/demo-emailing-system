{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useMemo, useState } from 'react';\nimport Layout from '@components/layout/Layout';\nimport matchSorter from 'match-sorter';\nimport TableComponent from '@components/Table';\nimport makeData from '@utils/helpers';\n\nconst headerSearch = () => {\n  return __jsx(\"div\", {\n    className: \"flex justify-start\",\n    style: {\n      width: '55%'\n    }\n  }, __jsx(\"p\", null, \"an header search here\"));\n};\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, {\n    keys: [row => row.values[id]]\n  });\n} // Let the table remove the filter if the string is empty\n\n\nfuzzyTextFilterFn.autoRemove = val => !val;\n\nconst IndexPage = () => {\n  const {\n    0: data,\n    1: setData\n  } = useState(() => makeData(20));\n  const columns = useMemo(() => [{\n    Header: 'Table',\n    columns: [{\n      Header: 'First Name',\n      accessor: 'firstName'\n    }, {\n      Header: 'Last Name',\n      accessor: 'lastName'\n    }, {\n      Header: 'Email',\n      accessor: 'email'\n    }]\n  }, {\n    Header: 'Test Info',\n    columns: [{\n      Header: 'Invite Sent',\n      accessor: 'inviteSent'\n    }, {\n      Header: 'Test Sent',\n      accessor: 'testSent'\n    }, {\n      Header: 'Test Status',\n      accessor: 'testStatus'\n    }]\n  }], []);\n  const filterTypes = useMemo(() => ({\n    // Add a new fuzzyTextFilterFn filter type.\n    fuzzyText: fuzzyTextFilterFn,\n    // Or, override the default text filter to use\n    // \"startWith\"\n    text: (rows, id, filterValue) => {\n      return rows.filter(row => {\n        const rowValue = row.values[id];\n        return rowValue !== undefined ? String(rowValue).toLowerCase().startsWith(String(filterValue).toLowerCase()) : true;\n      });\n    }\n  }), []);\n  return __jsx(Layout, {\n    title: \"Your Awesome App\",\n    className: \"container py-8 overflow-auto\",\n    header: headerSearch()\n  }, __jsx(\"p\", {\n    className: \"mb-4 text-lg font-light\"\n  }, \"Demo spreadsheet upload and email list system.\"), __jsx(\"div\", null, __jsx(TableComponent, {\n    columns: columns,\n    data: data,\n    setData: setData,\n    filterTypes: filterTypes // defaultColumn= {DefaultColumn}\n    // globalFilter= {GlobalFilter}\n    // renderHeader= {(header: unknown) => JSX.Element}\n    // renderFilter= {(column: unknown) => JSX.Element}\n    // renderTableBody= {(column: unknown) => JSX.Element}\n    // renderTableRow= {(row: unknown) => JSX.Element}\n    // renderTableCell= {(cell: unknown) => JSX.Element}\n    // customHook= {(hooks: unknown) => unknown}\n    // editableFields={['firstName', 'lastName', 'email']}\n\n  })));\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/mnt/c/Users/arash/Documents/DevInDoc/Getaboard/demoEmail/reward-test/pages/index.tsx"],"names":["React","useMemo","useState","Layout","matchSorter","TableComponent","makeData","headerSearch","width","fuzzyTextFilterFn","rows","id","filterValue","keys","row","values","autoRemove","val","IndexPage","data","setData","columns","Header","accessor","filterTypes","fuzzyText","text","filter","rowValue","undefined","String","toLowerCase","startsWith"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react'\nimport { NextPage } from 'next'\nimport Layout from '@components/layout/Layout'\nimport routes from '@utils/routes'\nimport Link from 'next/link'\nimport matchSorter from 'match-sorter'\nimport { FiArrowRight } from 'react-icons/fi'\nimport TableComponent from '@components/Table'\nimport makeData from '@utils/helpers'\n\nconst headerSearch = () => {\n  return (\n    <div className=\"flex justify-start\" style={{ width: '55%' }}>\n      <p>an header search here</p>\n    </div>\n  )\n}\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] })\n}\n\n// Let the table remove the filter if the string is empty\nfuzzyTextFilterFn.autoRemove = (val) => !val\n\nconst IndexPage: NextPage = () => {\n  const [data, setData] = useState(() => makeData(20))\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'Table',\n        columns: [\n          {\n            Header: 'First Name',\n            accessor: 'firstName',\n          },\n          {\n            Header: 'Last Name',\n            accessor: 'lastName',\n          },\n          {\n            Header: 'Email',\n            accessor: 'email',\n          },\n        ],\n      },\n      {\n        Header: 'Test Info',\n        columns: [\n          {\n            Header: 'Invite Sent',\n            accessor: 'inviteSent',\n          },\n          {\n            Header: 'Test Sent',\n            accessor: 'testSent',\n          },\n          {\n            Header: 'Test Status',\n            accessor: 'testStatus',\n          },\n        ],\n      },\n    ],\n    []\n  )\n\n  const filterTypes = useMemo(\n    () => ({\n      // Add a new fuzzyTextFilterFn filter type.\n      fuzzyText: fuzzyTextFilterFn,\n      // Or, override the default text filter to use\n      // \"startWith\"\n      text: (rows, id, filterValue) => {\n        return rows.filter((row) => {\n          const rowValue = row.values[id]\n          return rowValue !== undefined\n            ? String(rowValue)\n                .toLowerCase()\n                .startsWith(String(filterValue).toLowerCase())\n            : true\n        })\n      },\n    }),\n    []\n  )\n\n  return (\n    <Layout\n      title=\"Your Awesome App\"\n      className=\"container py-8 overflow-auto\"\n      header={headerSearch()}\n    >\n      {/* <h1 className=\"mb-4 text-3xl font-black dark:text-gray-100\">Welcome</h1> */}\n      <p className=\"mb-4 text-lg font-light\">\n        Demo spreadsheet upload and email list system.\n      </p>\n      <div>\n        <TableComponent\n          columns={columns}\n          data={data}\n          setData={setData}\n          filterTypes={filterTypes}\n          // defaultColumn= {DefaultColumn}\n          // globalFilter= {GlobalFilter}\n          // renderHeader= {(header: unknown) => JSX.Element}\n          // renderFilter= {(column: unknown) => JSX.Element}\n          // renderTableBody= {(column: unknown) => JSX.Element}\n          // renderTableRow= {(row: unknown) => JSX.Element}\n          // renderTableCell= {(cell: unknown) => JSX.Element}\n          // customHook= {(hooks: unknown) => unknown}\n          // editableFields={['firstName', 'lastName', 'email']}\n        />\n      </div>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"]},"metadata":{},"sourceType":"module"}