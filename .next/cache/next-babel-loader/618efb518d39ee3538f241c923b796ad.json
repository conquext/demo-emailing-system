{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/mnt/c/Users/arash/Documents/DevInDoc/Getaboard/demoEmail/reward-test/src/components/Text.tsx\";\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport clsx from 'clsx';\n\nvar Text = function Text(_ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      _ref$h = _ref.h1,\n      h1 = _ref$h === void 0 ? false : _ref$h,\n      _ref$h2 = _ref.h2,\n      h2 = _ref$h2 === void 0 ? false : _ref$h2,\n      _ref$h3 = _ref.h3,\n      h3 = _ref$h3 === void 0 ? false : _ref$h3,\n      _ref$h4 = _ref.h4,\n      h4 = _ref$h4 === void 0 ? false : _ref$h4,\n      _ref$h5 = _ref.h5,\n      h5 = _ref$h5 === void 0 ? false : _ref$h5,\n      _ref$h6 = _ref.h6,\n      h6 = _ref$h6 === void 0 ? false : _ref$h6,\n      _ref$small = _ref.small,\n      small = _ref$small === void 0 ? false : _ref$small,\n      _ref$bold = _ref.bold,\n      bold = _ref$bold === void 0 ? false : _ref$bold;\n  var sharedStyles = 'text-gray-700 dark:text-gray-300';\n  var headerStyles = 'text-gray-900 dark:text-gray-100 font-black';\n\n  if (h1) {\n    return __jsx(\"h1\", {\n      className: clsx('text-5xl', headerStyles, className),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n  if (h2) {\n    return __jsx(\"h2\", {\n      className: clsx('text-4xl', headerStyles, className),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n  if (h3) {\n    return __jsx(\"h3\", {\n      className: clsx('text-3xl', headerStyles, className),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n  if (h4) {\n    return __jsx(\"h4\", {\n      className: clsx('text-2xl', headerStyles, className),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n  if (h5) {\n    return __jsx(\"h5\", {\n      className: clsx('text-xl', headerStyles, className),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n  if (h6) {\n    return __jsx(\"h6\", {\n      className: clsx('text-lg', headerStyles, className),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n  if (small) {\n    return __jsx(\"small\", {\n      className: clsx('text-xs', sharedStyles, className),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n  return __jsx(\"p\", {\n    className: clsx('font-light leading-relaxed', {\n      'font-semibold': bold,\n      'text-xs': small,\n      'text-base': !small\n    }, sharedStyles, className),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n_c = Text;\nexport default Text;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"sources":["/mnt/c/Users/arash/Documents/DevInDoc/Getaboard/demoEmail/reward-test/src/components/Text.tsx"],"names":["React","clsx","Text","className","children","h1","h2","h3","h4","h5","h6","small","bold","sharedStyles","headerStyles"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAeA,IAAMC,IAAqB,GAAG,SAAxBA,IAAwB,OAWxB;AAAA,MAVJC,SAUI,QAVJA,SAUI;AAAA,MATJC,QASI,QATJA,QASI;AAAA,oBARJC,EAQI;AAAA,MARJA,EAQI,uBARC,KAQD;AAAA,qBAPJC,EAOI;AAAA,MAPJA,EAOI,wBAPC,KAOD;AAAA,qBANJC,EAMI;AAAA,MANJA,EAMI,wBANC,KAMD;AAAA,qBALJC,EAKI;AAAA,MALJA,EAKI,wBALC,KAKD;AAAA,qBAJJC,EAII;AAAA,MAJJA,EAII,wBAJC,KAID;AAAA,qBAHJC,EAGI;AAAA,MAHJA,EAGI,wBAHC,KAGD;AAAA,wBAFJC,KAEI;AAAA,MAFJA,KAEI,2BAFI,KAEJ;AAAA,uBADJC,IACI;AAAA,MADJA,IACI,0BADG,KACH;AACJ,MAAMC,YAAY,GAAG,kCAArB;AACA,MAAMC,YAAY,GAAG,6CAArB;;AAEA,MAAIT,EAAJ,EAAQ;AACN,WACE;AAAI,MAAA,SAAS,EAAEJ,IAAI,CAAC,UAAD,EAAaa,YAAb,EAA2BX,SAA3B,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2DC,QAA3D,CADF;AAGD;;AAED,MAAIE,EAAJ,EAAQ;AACN,WACE;AAAI,MAAA,SAAS,EAAEL,IAAI,CAAC,UAAD,EAAaa,YAAb,EAA2BX,SAA3B,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2DC,QAA3D,CADF;AAGD;;AAED,MAAIG,EAAJ,EAAQ;AACN,WACE;AAAI,MAAA,SAAS,EAAEN,IAAI,CAAC,UAAD,EAAaa,YAAb,EAA2BX,SAA3B,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2DC,QAA3D,CADF;AAGD;;AAED,MAAII,EAAJ,EAAQ;AACN,WACE;AAAI,MAAA,SAAS,EAAEP,IAAI,CAAC,UAAD,EAAaa,YAAb,EAA2BX,SAA3B,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2DC,QAA3D,CADF;AAGD;;AAED,MAAIK,EAAJ,EAAQ;AACN,WACE;AAAI,MAAA,SAAS,EAAER,IAAI,CAAC,SAAD,EAAYa,YAAZ,EAA0BX,SAA1B,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0DC,QAA1D,CADF;AAGD;;AAED,MAAIM,EAAJ,EAAQ;AACN,WACE;AAAI,MAAA,SAAS,EAAET,IAAI,CAAC,SAAD,EAAYa,YAAZ,EAA0BX,SAA1B,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0DC,QAA1D,CADF;AAGD;;AAED,MAAIO,KAAJ,EAAW;AACT,WACE;AAAO,MAAA,SAAS,EAAEV,IAAI,CAAC,SAAD,EAAYY,YAAZ,EAA0BV,SAA1B,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,QADH,CADF;AAKD;;AAED,SACE;AACE,IAAA,SAAS,EAAEH,IAAI,CACb,4BADa,EAEb;AAAE,uBAAiBW,IAAnB;AAAyB,iBAAWD,KAApC;AAA2C,mBAAa,CAACA;AAAzD,KAFa,EAGbE,YAHa,EAIbV,SAJa,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGC,QARH,CADF;AAYD,CAvED;;KAAMF,I;AAyEN,eAAeA,IAAf","sourcesContent":["import * as React from 'react'\nimport clsx from 'clsx'\n\nexport interface Props {\n  className?: string | Record<string, unknown>\n  h1?: boolean\n  h2?: boolean\n  h3?: boolean\n  h4?: boolean\n  h5?: boolean\n  h6?: boolean\n  p?: boolean\n  small?: boolean\n  bold?: boolean\n}\n\nconst Text: React.FC<Props> = ({\n  className,\n  children,\n  h1 = false,\n  h2 = false,\n  h3 = false,\n  h4 = false,\n  h5 = false,\n  h6 = false,\n  small = false,\n  bold = false,\n}) => {\n  const sharedStyles = 'text-gray-700 dark:text-gray-300'\n  const headerStyles = 'text-gray-900 dark:text-gray-100 font-black'\n\n  if (h1) {\n    return (\n      <h1 className={clsx('text-5xl', headerStyles, className)}>{children}</h1>\n    )\n  }\n\n  if (h2) {\n    return (\n      <h2 className={clsx('text-4xl', headerStyles, className)}>{children}</h2>\n    )\n  }\n\n  if (h3) {\n    return (\n      <h3 className={clsx('text-3xl', headerStyles, className)}>{children}</h3>\n    )\n  }\n\n  if (h4) {\n    return (\n      <h4 className={clsx('text-2xl', headerStyles, className)}>{children}</h4>\n    )\n  }\n\n  if (h5) {\n    return (\n      <h5 className={clsx('text-xl', headerStyles, className)}>{children}</h5>\n    )\n  }\n\n  if (h6) {\n    return (\n      <h6 className={clsx('text-lg', headerStyles, className)}>{children}</h6>\n    )\n  }\n\n  if (small) {\n    return (\n      <small className={clsx('text-xs', sharedStyles, className)}>\n        {children}\n      </small>\n    )\n  }\n\n  return (\n    <p\n      className={clsx(\n        'font-light leading-relaxed',\n        { 'font-semibold': bold, 'text-xs': small, 'text-base': !small },\n        sharedStyles,\n        className\n      )}\n    >\n      {children}\n    </p>\n  )\n}\n\nexport default Text\n"]},"metadata":{},"sourceType":"module"}