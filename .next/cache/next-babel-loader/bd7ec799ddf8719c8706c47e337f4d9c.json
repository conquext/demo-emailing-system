{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport NextDocument, { Html, Head, Main, NextScript } from 'next/document';\n\nclass Document extends NextDocument {\n  static async getInitialProps(context) {\n    const initialProps = await NextDocument.getInitialProps(context);\n    return _objectSpread({}, initialProps);\n  }\n\n  render() {\n    return __jsx(Html, {\n      lang: \"en\"\n    }, __jsx(Head, null, __jsx(\"link\", {\n      href: \"https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css\",\n      rel: \"stylesheet\"\n    })), __jsx(\"body\", {\n      className: \"min-h-screen\"\n    }, __jsx(\"script\", {\n      dangerouslySetInnerHTML: {\n        __html: `\n                (function() {\n                  var storageKey = 'darkMode';\n                  var classNameDark = 'dark-mode';\n                  var classNameLight = 'light-mode';\n                \n                  function setClassOnDocumentBody(darkMode) {\n                    document.body.classList.add(darkMode ? classNameDark : classNameLight);\n                    document.body.classList.remove(darkMode ? classNameLight : classNameDark);\n                  }\n                  \n                  var preferDarkQuery = '(prefers-color-scheme: dark)';\n                  var mql = window.matchMedia(preferDarkQuery);\n                  var supportsColorSchemeQuery = mql.media === preferDarkQuery;\n                  var localStorageTheme = null;\n\n                  try {\n                    localStorageTheme = localStorage.getItem(storageKey);\n                  } catch (err) {}\n\n                  var localStorageExists = localStorageTheme !== null;\n                  if (localStorageExists) {\n                    localStorageTheme = JSON.parse(localStorageTheme);\n                  }\n                \n                  if (localStorageExists) {\n                    setClassOnDocumentBody(localStorageTheme);\n                  } else if (supportsColorSchemeQuery) {\n                    setClassOnDocumentBody(mql.matches);\n                    localStorage.setItem(storageKey, mql.matches);\n                  } else {\n                    var isDarkMode = document.body.classList.contains(classNameDark);\n                    localStorage.setItem(storageKey, JSON.stringify(isDarkMode));\n                  }\n                })();\n              `\n      }\n    }), __jsx(Main, null), __jsx(NextScript, null)));\n  }\n\n}\n\nexport default Document;","map":{"version":3,"sources":["/mnt/c/Users/arash/Documents/DevInDoc/Getaboard/demoEmail/reward-test/pages/_document.tsx"],"names":["React","NextDocument","Html","Head","Main","NextScript","Document","getInitialProps","context","initialProps","render","__html"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,YAAP,IACEC,IADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,UAJF,QAMO,eANP;;AAQA,MAAMC,QAAN,SAAuBL,YAAvB,CAAoC;AAClC,eAAaM,eAAb,CAA6BC,OAA7B,EAAuD;AACrD,UAAMC,YAAY,GAAG,MAAMR,YAAY,CAACM,eAAb,CAA6BC,OAA7B,CAA3B;AACA,6BAAYC,YAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,OACE,MAAC,IAAD,QACE;AACE,MAAA,IAAI,EAAC,0DADP;AAEE,MAAA,GAAG,EAAC;AAFN,MADF,CADF,EAOE;AAAM,MAAA,SAAS,EAAC;AAAhB,OACE;AACE,MAAA,uBAAuB,EAAE;AACvBC,QAAAA,MAAM,EAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADc;AAD3B,MADF,EAyCE,MAAC,IAAD,OAzCF,EA0CE,MAAC,UAAD,OA1CF,CAPF,CADF;AAsDD;;AA7DiC;;AAgEpC,eAAeL,QAAf","sourcesContent":["import * as React from 'react'\nimport NextDocument, {\n  Html,\n  Head,\n  Main,\n  NextScript,\n  DocumentContext,\n} from 'next/document'\n\nclass Document extends NextDocument {\n  static async getInitialProps(context: DocumentContext) {\n    const initialProps = await NextDocument.getInitialProps(context)\n    return { ...initialProps }\n  }\n\n  render() {\n    return (\n      <Html lang=\"en\">\n        <Head>\n          <link\n            href=\"https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css\"\n            rel=\"stylesheet\"\n          />\n        </Head>\n        <body className=\"min-h-screen\">\n          <script\n            dangerouslySetInnerHTML={{\n              __html: `\n                (function() {\n                  var storageKey = 'darkMode';\n                  var classNameDark = 'dark-mode';\n                  var classNameLight = 'light-mode';\n                \n                  function setClassOnDocumentBody(darkMode) {\n                    document.body.classList.add(darkMode ? classNameDark : classNameLight);\n                    document.body.classList.remove(darkMode ? classNameLight : classNameDark);\n                  }\n                  \n                  var preferDarkQuery = '(prefers-color-scheme: dark)';\n                  var mql = window.matchMedia(preferDarkQuery);\n                  var supportsColorSchemeQuery = mql.media === preferDarkQuery;\n                  var localStorageTheme = null;\n\n                  try {\n                    localStorageTheme = localStorage.getItem(storageKey);\n                  } catch (err) {}\n\n                  var localStorageExists = localStorageTheme !== null;\n                  if (localStorageExists) {\n                    localStorageTheme = JSON.parse(localStorageTheme);\n                  }\n                \n                  if (localStorageExists) {\n                    setClassOnDocumentBody(localStorageTheme);\n                  } else if (supportsColorSchemeQuery) {\n                    setClassOnDocumentBody(mql.matches);\n                    localStorage.setItem(storageKey, mql.matches);\n                  } else {\n                    var isDarkMode = document.body.classList.contains(classNameDark);\n                    localStorage.setItem(storageKey, JSON.stringify(isDarkMode));\n                  }\n                })();\n              `,\n            }}\n          />\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    )\n  }\n}\n\nexport default Document\n"]},"metadata":{},"sourceType":"module"}