{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport XLSX from 'xlsx';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport styled from 'styled-components';\nimport { FiMoreHorizontal } from 'react-icons/fi';\nimport { FaCloudUploadAlt } from 'react-icons/fa';\nimport { SiMinutemailer } from 'react-icons/si';\nimport { MdMore, MdDelete } from 'react-icons/md';\nimport Layout from '@components/layout/Layout';\nimport TableComponent, { matchSorter, useAsyncDebounce } from '@components/Table';\nimport { isEmpty } from '@utils/helpers';\nimport Checkbox from '@components/Checkbox';\nimport Dropdown from '@components/Dropdown';\nimport Button from '@components/Button';\nimport UploadComponent from '@components/FileUpload';\nimport { deleteUser, getUsers, inviteUser } from '@utils/api';\nconst editableFields = ['firstName', 'lastName', 'email'];\n\nconst headerSearch = () => {\n  return __jsx(\"div\", {\n    className: \"flex justify-start\",\n    style: {\n      width: '55%'\n    }\n  }, __jsx(\"p\", null, \"an header search here\"));\n};\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, {\n    keys: [row => row.values[id]]\n  });\n} // Let the table remove the filter if the string is empty\n\n\nfuzzyTextFilterFn.autoRemove = val => !val; // Create an editable cell renderer\n\n\nconst EditableCell = ({\n  value: initialValue,\n  row: {\n    index\n  },\n  column: {\n    id\n  },\n  updateData // This is a custom function that we supplied to our table instance\n\n}) => {\n  // We need to keep and update the state of the cell normally\n  const {\n    0: value,\n    1: setValue\n  } = useState(initialValue);\n\n  const onChange = e => {\n    setValue(e.target.value);\n  }; // We'll only update the external data when the input is blurred\n\n\n  const onBlur = () => {\n    updateData(index, id, value);\n  }; // If the initialValue is changed external, sync it up with our state\n\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n  return editableFields.includes(id) ? __jsx(\"input\", {\n    value: value,\n    onChange: onChange,\n    onBlur: onBlur,\n    className: \"w-full px-2 bg-transparent focus:bg-white\"\n  }) : __jsx(\"div\", {\n    className: \"\"\n  }, value);\n}; // Define a default UI for filtering\n\n\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter\n}) {\n  const count = preGlobalFilteredRows.length;\n  const {\n    0: value,\n    1: setValue\n  } = useState(globalFilter);\n  const onChange = useAsyncDebounce(value => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n  return __jsx(\"span\", null, \"Search:\", ' ', __jsx(\"input\", {\n    value: value || '',\n    onChange: e => {\n      setValue(e.target.value);\n      onChange(e.target.value);\n    },\n    placeholder: `${count} records...`,\n    style: {\n      fontSize: '1.1rem',\n      border: '0'\n    }\n  }));\n} // Define a UI for filtering\n\n\nfunction DefaultColumnFilter({\n  column: {\n    filterValue,\n    preFilteredRows,\n    setFilter\n  }\n}) {\n  const count = preFilteredRows.length;\n  return __jsx(\"input\", {\n    value: filterValue || '',\n    onChange: e => {\n      setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n    },\n    placeholder: `Search ${count} records...`\n  });\n}\n\nconst IndexPage = () => {\n  const {\n    0: data,\n    1: setData\n  } = useState([]); // const [data, setData] = useState(() => makeData(6))\n\n  const columns = useMemo(() => [{\n    Header: 'Table',\n    columns: [{\n      Header: 'First Name',\n      accessor: 'firstName'\n    }, {\n      Header: 'Last Name',\n      accessor: 'lastName'\n    }, {\n      Header: 'Email',\n      accessor: 'email'\n    }]\n  }, {\n    Header: 'Test Info',\n    columns: [{\n      Header: 'Invite Sent',\n      accessor: 'inviteSent'\n    }, {\n      Header: 'Test Sent',\n      accessor: 'testSent'\n    }, {\n      Header: 'Test Status',\n      accessor: 'testStatus'\n    }]\n  }], []);\n  const spring = React.useMemo(() => ({\n    type: 'spring',\n    damping: 50,\n    stiffness: 100\n  }), []);\n  const filterTypes = useMemo(() => ({\n    // Add a new fuzzyTextFilterFn filter type.\n    fuzzyText: fuzzyTextFilterFn,\n    // Or, override the default text filter to use\n    // \"startWith\"\n    text: (rows, id, filterValue) => {\n      return rows.filter(row => {\n        const rowValue = row.values[id];\n        return rowValue !== undefined ? String(rowValue).toLowerCase().startsWith(String(filterValue).toLowerCase()) : true;\n      });\n    }\n  }), []);\n\n  const sendInvite = async (e, data) => {\n    e.stopPropagation();\n    const resp = await inviteUser([data]);\n\n    if (resp) {\n      setData(resp.data);\n    }\n  };\n\n  const getAndSetUsers = async () => {\n    const dataX = await getUsers();\n    const data = dataX === null || dataX === void 0 ? void 0 : dataX.data;\n\n    if (!isEmpty(data)) {\n      setData(Array.from(data));\n    }\n  };\n\n  useEffect(() => {\n    getAndSetUsers();\n  }, []);\n\n  const uploadDatabase = (file, type) => {\n    switch (type) {\n      case 'spreadsheet':\n        //  var first_worksheet = workbook.Sheets[workbook.SheetNames[0]]\n        // var data = XLSX.utils.sheet_to_json(first_worksheet, { header: 1 })\n        // /* convert from array of arrays to workbook */\n        // var worksheet = XLSX.utils.aoa_to_sheet(data)\n        // var new_workbook = XLSX.utils.book_new()\n        // XLSX.utils.book_append_sheet(new_workbook, worksheet, 'SheetJS')\n        const f = file.selectedFile[0];\n        const reader = new FileReader();\n        const stateData = data;\n\n        reader.onload = function (e) {\n          const data = e.target.result;\n          const readedData = XLSX.read(data, {\n            type: 'binary'\n          });\n          const wsname = readedData.SheetNames[0];\n          const ws = readedData.Sheets[wsname];\n          /* Convert array to json*/\n          // const dataParse = XLSX.utils.sheet_to_json(ws, { header: 1 })\n\n          const dataParse = XLSX.utils.sheet_to_json(ws, {\n            raw: true\n          });\n          const fieldNames = ['Serial No', 'firstName', 'lastName', 'email', 'inviteSent', 'testSent', 'testStatus', 'subRows'];\n          const newDataSet = dataParse.map(d => {\n            const pos = Object.keys(d);\n            fieldNames.forEach((name, i) => {\n              if (name !== 'Serial No') {\n                d[name] = d[name] || d[pos[i]] || '';\n                d[name] = String(d[name]);\n              }\n\n              if (name === 'subRows') d[name] = undefined;\n            });\n            return d;\n          });\n          const update = newDataSet.concat(stateData);\n          setData(update);\n        };\n\n        reader.readAsBinaryString(f);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const deleteRecord = async row => {\n    const newData = data.filter(d => d.email !== row.original.email);\n    await deleteUser(row.original);\n    setData(newData);\n  };\n\n  const defaultColumn = React.useMemo(() => ({\n    // Let's set up our Filter UI\n    Filter: DefaultColumnFilter,\n    Cell: EditableCell\n  }), []);\n\n  const renderTableHooks = hooks => {\n    hooks.visibleColumns.push(columns => [// Let's make a column for selection\n    {\n      id: 'selection',\n      // The header can use the table's getToggleAllRowsSelectedProps method\n      // to render a checkbox\n      Header: ({\n        getToggleAllPageRowsSelectedProps\n      }) => !isEmpty(data) && __jsx(\"div\", null, __jsx(Checkbox, getToggleAllPageRowsSelectedProps())),\n      // The cell can use the individual row's getToggleRowSelectedProps method\n      // to the render a checkbox\n      Cell: ({\n        row\n      }) => __jsx(\"div\", null, __jsx(Checkbox, row.getToggleRowSelectedProps()))\n    }, ...columns, {\n      id: 'deletion',\n      // The header can use the table's getToggleAllRowsSelectedProps method\n      // to render a checkbox\n      Header: ({\n        getToggleAllPageRowsSelectedProps\n      }) => __jsx(\"div\", null),\n      // The cell can use the individual row's getToggleRowSelectedProps method\n      // to the render a checkbox\n      Cell: ({\n        row\n      }) => __jsx(\"div\", _extends({}, row.getToggleRowSelectedProps(), {\n        onClick: () => deleteRecord(row),\n        className: \"group\"\n      }), __jsx(MdDelete, _extends({}, row.getToggleRowSelectedProps(), {\n        className: \"opacity-50 group-hover:opacity-100 group-hover:hover:text-red-600\"\n      })))\n    }]);\n  };\n\n  const renderTableHeader = column => {\n    const header = column.render('Header');\n    return __jsx(React.Fragment, null, header);\n  };\n\n  const renderTableRow = (page, prepareRow) => {\n    const renderTableCell = cell => {\n      if (cell.column.id === 'inviteSent') {\n        var _cell$row, _cell$row$values, _cell$row$values$invi;\n\n        if (((_cell$row = cell.row) === null || _cell$row === void 0 ? void 0 : (_cell$row$values = _cell$row.values) === null || _cell$row$values === void 0 ? void 0 : (_cell$row$values$invi = _cell$row$values.inviteSent) === null || _cell$row$values$invi === void 0 ? void 0 : _cell$row$values$invi.toLowerCase()) === 'no') return __jsx(\"div\", {\n          className: \"z-50 inline-flex items-center justify-center w-full h-full align-middle group\"\n        }, __jsx(\"span\", {\n          className: \"text-red-600\"\n        }, cell.render('Cell')), __jsx(\"span\", {\n          className: \"hidden align-middle group-focus:flex group-hover:flex align-center\"\n        }, __jsx(Dropdown, {\n          buttonLabel: __jsx(FiMoreHorizontal, {\n            className: \"flex self-center opacity-50\"\n          }),\n          className: \"z-20 ml-4\"\n        }, __jsx(\"ul\", {\n          className: \"w-40 py-2 space-y-4 text-sm\"\n        }, __jsx(\"li\", null, __jsx(\"span\", {\n          className: \"cursor-pointer text-primary hover:underline\",\n          title: \"components\",\n          onClick: e => sendInvite(e, cell.row.values)\n        }, __jsx(SiMinutemailer, {\n          className: \"inline ml-6 mr-4\"\n        }), \"Send Invite\")), __jsx(\"li\", null, __jsx(\"hr\", {\n          className: \"dark:border-gray-700\"\n        })), __jsx(\"li\", {\n          className: \"cursor-not-allowed\"\n        }, __jsx(\"span\", {\n          className: \"text-primary hover:underline\",\n          title: \"Typography\"\n        }, __jsx(MdMore, {\n          className: \"inline ml-6 mr-4 \"\n        }), \"More Options\"))))));else return __jsx(\"div\", {\n          className: \"inline-flex items-center justify-center w-full align-middle group\"\n        }, __jsx(\"span\", {\n          className: \"text-green-600\"\n        }, cell.render('Cell')));\n      }\n\n      if (cell.column.id === 'testSent') {\n        var _cell$row$values2, _cell$row$values2$tes;\n\n        if (((_cell$row$values2 = cell.row.values) === null || _cell$row$values2 === void 0 ? void 0 : (_cell$row$values2$tes = _cell$row$values2.testSent) === null || _cell$row$values2$tes === void 0 ? void 0 : _cell$row$values2$tes.toLowerCase()) === 'no') return __jsx(\"div\", {\n          className: \"inline-flex items-center justify-center w-full text-red-600\"\n        }, cell.render('Cell'));else return __jsx(\"div\", {\n          className: \"inline-flex items-center justify-center w-full text-green-600\"\n        }, cell.render('Cell'));\n      }\n\n      if (cell.column.id === 'testStatus') {\n        var _cell$row2, _cell$row2$values, _cell$row2$values$tes;\n\n        if (((_cell$row2 = cell.row) === null || _cell$row2 === void 0 ? void 0 : (_cell$row2$values = _cell$row2.values) === null || _cell$row2$values === void 0 ? void 0 : (_cell$row2$values$tes = _cell$row2$values.testStatus) === null || _cell$row2$values$tes === void 0 ? void 0 : _cell$row2$values$tes.toLowerCase()) === 'pending') return __jsx(\"div\", {\n          className: \"inline-flex items-center justify-center w-full text-yellow-700\"\n        }, cell.render('Cell'));else return __jsx(\"div\", {\n          className: \"inline-flex items-center justify-center w-full text-green-600\"\n        }, cell.render('Cell'));\n      }\n\n      return __jsx(\"div\", {\n        className: \"inline-flex items-center justify-center w-full \"\n      }, cell.render('Cell'));\n    };\n\n    return __jsx(React.Fragment, null, page.map((row, i1) => {\n      prepareRow(row);\n      return __jsx(motion.tr, _extends({}, row.getRowProps({\n        layoutTransition: spring,\n        exit: {\n          opacity: 0,\n          maxHeight: 0\n        }\n      }), {\n        className: `${i1 % 2 ? '' : ''} text-center h-16`\n      }), row.cells.map((cell, i) => {\n        return __jsx(motion.td, _extends({}, cell.getCellProps({\n          layoutTransition: spring\n        }), {\n          className: \"text-center\" // className={`${\n          //   i1 % 2 ? 'bg-gray-400 border-gray-400' : ''\n          // } h-16`}\n\n        }), renderTableCell ? renderTableCell(cell) : cell.render('Cell'));\n      }));\n    }));\n  };\n\n  const renderExtraTableTd = (controls, formikProps) => {\n    const {\n      visibleColumns\n    } = controls;\n    const {\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      isSubmitting\n    } = formikProps;\n    return __jsx(\"tr\", {\n      role: \"row\",\n      className: \"h-16 elevation-3\"\n    }, __jsx(\"td\", {\n      role: \"cell\",\n      className: \"text-center\"\n    }, \"\\xA0\"), __jsx(\"td\", {\n      role: \"cell\",\n      className: \"text-right\"\n    }, __jsx(\"div\", {\n      className: \"flex flex-col items-start\"\n    }, __jsx(\"input\", {\n      value: values.fName,\n      name: \"fName\",\n      id: \"fName\",\n      placeholder: 'First Name',\n      className: \"h-8 px-2 radius-input hover:border-primary\",\n      onBlur: handleBlur,\n      onChange: handleChange\n    }), __jsx(\"span\", null, errors.fName && touched.fName && __jsx(\"p\", {\n      className: \"text-xs text-left text-red-600\"\n    }, errors.fName)))), __jsx(\"td\", {\n      role: \"cell\",\n      className: \"text-right\"\n    }, __jsx(\"div\", {\n      className: \"flex flex-col items-start\"\n    }, __jsx(\"input\", {\n      value: values.lName,\n      name: \"lName\",\n      id: \"lName\",\n      placeholder: 'Last Name',\n      className: \"h-8 px-2 radius-input hover:border-primary\",\n      onChange: handleChange,\n      onBlur: handleBlur\n    }), __jsx(\"span\", null, errors.lName && touched.lName && __jsx(\"p\", {\n      className: \"text-xs text-left text-red-600\"\n    }, errors.lName)))), __jsx(\"td\", {\n      role: \"cell\",\n      className: \"text-right\",\n      placeholder: 'Last Name'\n    }, __jsx(\"div\", {\n      className: \"flex flex-col items-start\"\n    }, __jsx(\"input\", {\n      value: values.email,\n      id: \"email\",\n      name: \"email\",\n      placeholder: 'Email',\n      className: \"h-8 px-2 radius-input hover:border-primary\",\n      onChange: handleChange,\n      onBlur: handleBlur\n    }), __jsx(\"span\", null, errors.email && touched.email && __jsx(\"p\", {\n      className: \"text-xs text-left text-red-600\"\n    }, errors.email)))), __jsx(\"td\", {\n      role: \"cell\",\n      className: \"w-full text-right\",\n      colSpan: visibleColumns.length - 4\n    }, __jsx(Button, {\n      type: \"primary\",\n      className: \"spinner\",\n      htmlFor: \"submit\",\n      disabled: isSubmitting\n    }, \"Add new\")));\n  };\n\n  const handleBatchActions = controls => {\n    const {\n      state: tableState,\n      selectedFlatRows\n    } = controls;\n    const {\n      selectedRowIds\n    } = tableState;\n    const selectedLen = Object.keys(selectedRowIds || {}).length;\n    const selectedMembers = selectedFlatRows.map(d => d.original);\n    const uninvitedMembers = selectedMembers.filter(d => {\n      var _d$testSent;\n\n      return ((_d$testSent = d['testSent']) === null || _d$testSent === void 0 ? void 0 : _d$testSent.toLowerCase()) !== 'no';\n    });\n    const uninvitedLen = uninvitedMembers.length;\n    return __jsx(\"div\", {\n      className: `flex ${selectedLen ? 'justify-between' : 'justify-end'} w-full mb-2`\n    }, selectedLen > 0 && __jsx(React.Fragment, null, __jsx(\"p\", null, \"You have selected \", selectedLen, \" members\"), uninvitedLen > 0 && __jsx(\"div\", null, __jsx(Button, {\n      onClick: e => sendInvite(e, uninvitedMembers)\n    }, \"Send Invitation to \", uninvitedLen, \" members\"))), !selectedLen && __jsx(React.Fragment, null, __jsx(UploadComponent, {\n      allowedExtensions: ['xls', 'xlsx', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'] // autoUpload={true}\n      // render={(el: HTMLElement | null) => {\n      ,\n      render: el => {\n        return __jsx(\"span\", {\n          className: \"flex justify-end w-full px-4 py-2 border cursor-pointer hover:text-primary-lighter hover:border-primary-darker text-primary\",\n          onClick: e => {\n            e.preventDefault();\n            el && el.click();\n          }\n        }, __jsx(FaCloudUploadAlt, {\n          className: \"w-6 h-6 mr-2\"\n        }), \"Upload SpreadSheet\");\n      },\n      uploadHandler: (data, state, cb) => {\n        uploadDatabase(state, 'spreadsheet');\n      }\n    })));\n  };\n\n  const handleFormSubmit = async (data, cb) => {\n    const payload = {};\n    payload.firstName = data.fName;\n    payload.lastName = data.lName;\n    payload.email = data.email;\n    payload.inviteSent = 'No';\n    payload.testSent = 'No';\n    payload.testStatus = 'NA';\n    const resp = await inviteUser([payload]);\n\n    if (resp) {\n      cb.resetForm();\n      setData(resp.data);\n    }\n  };\n\n  const tableWrapper = styled.form`\n    table {\n      /* border-spacing: 0; */\n      /* border: 1px solid black; */\n      border-collapse: separate;\n      border-style: 1em;\n      border-spacing: 1em;\n      /* border-spacing: 0 1em; */\n\n      thead tr {\n        :first-child {\n          display: none;\n        }\n        /* border: none !important; */\n        /* border-bottom: 2px solid; */\n        background: none !important;\n        border-radius: none !important;\n      }\n\n      tbody {\n        tr {\n          border-radius: 1rem;\n          padding: 1.5rem;\n\n          margin: 0.5rem 0;\n          box-shadow: 0 3px 6px rgba(0, 0, 0, 0.57),\n            0 2px 4px rgba(0, 0, 0, 0.05);\n          transition: transform 0.5s -webkit-transform 0.5s;\n          :last-child {\n            border-radius: 1rem;\n            td {\n              /* border-bottom: 0; */\n            }\n          }\n        }\n      }\n\n      th,\n      td {\n        margin: 0;\n        padding: 0.5rem;\n        /* border-bottom: 1px solid black;\n      border-right: 1px solid black; */\n\n        :last-child {\n          border-right: 0;\n        }\n\n        /* input {\n        font-size: 1rem;\n        padding: 0;\n        margin: 0;\n        border: 0;\n      } */\n      }\n\n      .pagination {\n        padding: 0.5rem;\n      }\n    }\n  `;\n  return __jsx(Layout, {\n    title: \"Your Awesome App\",\n    className: \"container max-w-6xl py-8 overflow-auto\",\n    header: headerSearch()\n  }, __jsx(\"p\", {\n    className: \"mb-4 text-lg font-bolder\"\n  }, \"Demo spreadsheet upload and email list system.\"), __jsx(\"div\", null, __jsx(Formik, {\n    initialValues: {\n      fName: '',\n      lName: '',\n      email: ''\n    },\n    onSubmit: handleFormSubmit,\n    validateOnMount: false,\n    validationSchema: Yup.object({\n      fName: Yup.string().min(3, 'Must contain 3 characters or more').required('First Name is required'),\n      lName: Yup.string().min(3, 'Must contain 3 characters or more').required('Last Name is required'),\n      email: Yup.string().email('Invalid email address').required('Please provide the email')\n    })\n  }, formikProps => __jsx(TableComponent, {\n    columns: columns,\n    data: data,\n    setData: setData,\n    tableClassName: \"w-full\",\n    filterTypes: filterTypes,\n    defaultColumn: defaultColumn,\n    globalFilter: {\n      use: true,\n      Component: GlobalFilter\n    },\n    renderHeader: renderTableHeader // renderFilter= {(column: unknown) => JSX.Element}\n    // renderTableBody={renderTableBody}\n    ,\n    renderTableRow: renderTableRow,\n    renderExtraTableTd: controls => renderExtraTableTd(controls, formikProps) // renderTableCell= {(cell: unknown) => JSX.Element}\n    ,\n    handleTableControls: {\n      jsx: handleBatchActions\n    },\n    tableWrapper: {\n      use: true,\n      wrapper: tableWrapper,\n      props: {\n        onSubmit: formikProps.handleSubmit\n      }\n    },\n    customHook: renderTableHooks\n  }))));\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/mnt/c/Users/arash/Documents/DevInDoc/Getaboard/demoEmail/reward-test/pages/index.tsx"],"names":["React","useEffect","useMemo","useState","motion","XLSX","Formik","Yup","styled","FiMoreHorizontal","FaCloudUploadAlt","SiMinutemailer","MdMore","MdDelete","Layout","TableComponent","matchSorter","useAsyncDebounce","isEmpty","Checkbox","Dropdown","Button","UploadComponent","deleteUser","getUsers","inviteUser","editableFields","headerSearch","width","fuzzyTextFilterFn","rows","id","filterValue","keys","row","values","autoRemove","val","EditableCell","value","initialValue","index","column","updateData","setValue","onChange","e","target","onBlur","includes","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","length","undefined","fontSize","border","DefaultColumnFilter","preFilteredRows","setFilter","IndexPage","data","setData","columns","Header","accessor","spring","type","damping","stiffness","filterTypes","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","sendInvite","stopPropagation","resp","getAndSetUsers","dataX","Array","from","uploadDatabase","file","f","selectedFile","reader","FileReader","stateData","onload","result","readedData","read","wsname","SheetNames","ws","Sheets","dataParse","utils","sheet_to_json","raw","fieldNames","newDataSet","map","d","pos","Object","forEach","name","i","update","concat","readAsBinaryString","deleteRecord","newData","email","original","defaultColumn","Filter","Cell","renderTableHooks","hooks","visibleColumns","push","getToggleAllPageRowsSelectedProps","getToggleRowSelectedProps","renderTableHeader","header","render","renderTableRow","page","prepareRow","renderTableCell","cell","inviteSent","testSent","testStatus","i1","getRowProps","layoutTransition","exit","opacity","maxHeight","cells","getCellProps","renderExtraTableTd","controls","formikProps","errors","touched","handleChange","handleBlur","isSubmitting","fName","lName","handleBatchActions","state","tableState","selectedFlatRows","selectedRowIds","selectedLen","selectedMembers","uninvitedMembers","uninvitedLen","el","preventDefault","click","cb","handleFormSubmit","payload","firstName","lastName","resetForm","tableWrapper","form","object","string","min","required","use","Component","jsx","wrapper","props","onSubmit","handleSubmit"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { NextPage } from 'next'\nimport { motion } from 'framer-motion'\nimport XLSX from 'xlsx'\nimport { ToastContainer, toast } from 'react-toastify'\nimport { Formik } from 'formik'\nimport * as Yup from 'yup'\nimport styled from 'styled-components'\nimport { FiMoreHorizontal } from 'react-icons/fi'\nimport { FaCloudUploadAlt } from 'react-icons/fa'\nimport { SiMinutemailer } from 'react-icons/si'\nimport { MdMore, MdDelete } from 'react-icons/md'\nimport Layout from '@components/layout/Layout'\nimport TableComponent, {\n  matchSorter,\n  useAsyncDebounce,\n} from '@components/Table'\nimport makeData, { isEmpty } from '@utils/helpers'\nimport Checkbox from '@components/Checkbox'\nimport Dropdown from '@components/Dropdown'\nimport Button from '@components/Button'\nimport UploadComponent from '@components/FileUpload'\nimport { deleteUser, getUsers, inviteUser } from '@utils/api'\n\nconst editableFields = ['firstName', 'lastName', 'email']\n\nconst headerSearch = () => {\n  return (\n    <div className=\"flex justify-start\" style={{ width: '55%' }}>\n      <p>an header search here</p>\n    </div>\n  )\n}\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] })\n}\n\n// Let the table remove the filter if the string is empty\nfuzzyTextFilterFn.autoRemove = (val) => !val\n\n// Create an editable cell renderer\nconst EditableCell = ({\n  value: initialValue,\n  row: { index },\n  column: { id },\n  updateData, // This is a custom function that we supplied to our table instance\n}) => {\n  // We need to keep and update the state of the cell normally\n  const [value, setValue] = useState(initialValue)\n\n  const onChange = (e) => {\n    setValue(e.target.value)\n  }\n\n  // We'll only update the external data when the input is blurred\n  const onBlur = () => {\n    updateData(index, id, value)\n  }\n\n  // If the initialValue is changed external, sync it up with our state\n  useEffect(() => {\n    setValue(initialValue)\n  }, [initialValue])\n\n  return editableFields.includes(id) ? (\n    <input\n      value={value}\n      onChange={onChange}\n      onBlur={onBlur}\n      className=\"w-full px-2 bg-transparent focus:bg-white\"\n    />\n  ) : (\n    <div className=\"\">{value}</div>\n  )\n}\n\n// Define a default UI for filtering\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter,\n}) {\n  const count = preGlobalFilteredRows.length\n  const [value, setValue] = useState(globalFilter)\n  const onChange = useAsyncDebounce((value) => {\n    setGlobalFilter(value || undefined)\n  }, 200)\n\n  return (\n    <span>\n      Search:{' '}\n      <input\n        value={value || ''}\n        onChange={(e) => {\n          setValue(e.target.value)\n          onChange(e.target.value)\n        }}\n        placeholder={`${count} records...`}\n        style={{\n          fontSize: '1.1rem',\n          border: '0',\n        }}\n      />\n    </span>\n  )\n}\n\n// Define a UI for filtering\nfunction DefaultColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  const count = preFilteredRows.length\n\n  return (\n    <input\n      value={filterValue || ''}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\n      }}\n      placeholder={`Search ${count} records...`}\n    />\n  )\n}\n\nconst IndexPage: NextPage = () => {\n  const [data, setData] = useState([])\n  // const [data, setData] = useState(() => makeData(6))\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'Table',\n        columns: [\n          {\n            Header: 'First Name',\n            accessor: 'firstName',\n          },\n          {\n            Header: 'Last Name',\n            accessor: 'lastName',\n          },\n          {\n            Header: 'Email',\n            accessor: 'email',\n          },\n        ],\n      },\n      {\n        Header: 'Test Info',\n        columns: [\n          {\n            Header: 'Invite Sent',\n            accessor: 'inviteSent',\n          },\n          {\n            Header: 'Test Sent',\n            accessor: 'testSent',\n          },\n          {\n            Header: 'Test Status',\n            accessor: 'testStatus',\n          },\n        ],\n      },\n    ],\n    []\n  )\n  const spring = React.useMemo(\n    () => ({\n      type: 'spring',\n      damping: 50,\n      stiffness: 100,\n    }),\n    []\n  )\n  const filterTypes = useMemo(\n    () => ({\n      // Add a new fuzzyTextFilterFn filter type.\n      fuzzyText: fuzzyTextFilterFn,\n      // Or, override the default text filter to use\n      // \"startWith\"\n      text: (rows, id, filterValue) => {\n        return rows.filter((row) => {\n          const rowValue = row.values[id]\n          return rowValue !== undefined\n            ? String(rowValue)\n                .toLowerCase()\n                .startsWith(String(filterValue).toLowerCase())\n            : true\n        })\n      },\n    }),\n    []\n  )\n\n  const sendInvite = async (e, data) => {\n    e.stopPropagation()\n    const resp: any = await inviteUser([data])\n    if (resp) {\n      setData(resp.data)\n    }\n  }\n\n  const getAndSetUsers = async () => {\n    const dataX = (await getUsers()) as any\n    const data = dataX?.data as unknown[]\n    if (!isEmpty(data)) {\n      setData(Array.from(data))\n    }\n  }\n  useEffect(() => {\n    getAndSetUsers()\n  }, [])\n\n  const uploadDatabase = (file, type) => {\n    switch (type) {\n      case 'spreadsheet':\n        //  var first_worksheet = workbook.Sheets[workbook.SheetNames[0]]\n        // var data = XLSX.utils.sheet_to_json(first_worksheet, { header: 1 })\n\n        // /* convert from array of arrays to workbook */\n        // var worksheet = XLSX.utils.aoa_to_sheet(data)\n        // var new_workbook = XLSX.utils.book_new()\n        // XLSX.utils.book_append_sheet(new_workbook, worksheet, 'SheetJS')\n        const f = file.selectedFile[0]\n        const reader = new FileReader()\n        const stateData = data\n        reader.onload = function (e) {\n          const data = e.target.result\n          const readedData = XLSX.read(data, { type: 'binary' })\n          const wsname = readedData.SheetNames[0]\n          const ws = readedData.Sheets[wsname]\n\n          /* Convert array to json*/\n          // const dataParse = XLSX.utils.sheet_to_json(ws, { header: 1 })\n          const dataParse = XLSX.utils.sheet_to_json(ws, { raw: true })\n\n          const fieldNames = [\n            'Serial No',\n            'firstName',\n            'lastName',\n            'email',\n            'inviteSent',\n            'testSent',\n            'testStatus',\n            'subRows',\n          ]\n          const newDataSet = dataParse.map((d) => {\n            const pos = Object.keys(d)\n            fieldNames.forEach((name, i) => {\n              if (name !== 'Serial No') {\n                d[name] = d[name] || d[pos[i]] || ''\n                d[name] = String(d[name])\n              }\n              if (name === 'subRows') d[name] = undefined\n            })\n            return d\n          })\n          const update = newDataSet.concat(stateData)\n\n          setData(update)\n        }\n        reader.readAsBinaryString(f)\n        break\n\n      default:\n        break\n    }\n  }\n\n  const deleteRecord = async (row) => {\n    const newData = data.filter((d) => d.email !== row.original.email)\n    await deleteUser(row.original)\n    setData(newData)\n  }\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      // Let's set up our Filter UI\n      Filter: DefaultColumnFilter,\n      Cell: EditableCell,\n    }),\n    []\n  )\n\n  const renderTableHooks = (hooks) => {\n    hooks.visibleColumns.push((columns) => [\n      // Let's make a column for selection\n      {\n        id: 'selection',\n        // The header can use the table's getToggleAllRowsSelectedProps method\n        // to render a checkbox\n        Header: ({ getToggleAllPageRowsSelectedProps }) =>\n          !isEmpty(data) && (\n            <div>\n              <Checkbox {...getToggleAllPageRowsSelectedProps()} />\n            </div>\n          ),\n        // The cell can use the individual row's getToggleRowSelectedProps method\n        // to the render a checkbox\n        Cell: ({ row }) => (\n          <div>\n            <Checkbox {...row.getToggleRowSelectedProps()} />\n          </div>\n        ),\n      },\n      ...columns,\n      {\n        id: 'deletion',\n        // The header can use the table's getToggleAllRowsSelectedProps method\n        // to render a checkbox\n        Header: ({ getToggleAllPageRowsSelectedProps }) => <div></div>,\n        // The cell can use the individual row's getToggleRowSelectedProps method\n        // to the render a checkbox\n        Cell: ({ row }) => (\n          <div\n            {...row.getToggleRowSelectedProps()}\n            onClick={() => deleteRecord(row)}\n            className=\"group\"\n          >\n            <MdDelete\n              {...row.getToggleRowSelectedProps()}\n              className=\"opacity-50 group-hover:opacity-100 group-hover:hover:text-red-600\"\n            />\n          </div>\n        ),\n      },\n    ])\n  }\n\n  const renderTableHeader = (column) => {\n    const header = column.render('Header')\n    return <>{header}</>\n  }\n\n  const renderTableRow = (page, prepareRow) => {\n    const renderTableCell = (cell) => {\n      if (cell.column.id === 'inviteSent') {\n        if (cell.row?.values?.inviteSent?.toLowerCase() === 'no')\n          return (\n            <div className=\"z-50 inline-flex items-center justify-center w-full h-full align-middle group\">\n              <span className=\"text-red-600\">{cell.render('Cell')}</span>\n              <span className=\"hidden align-middle group-focus:flex group-hover:flex align-center\">\n                <Dropdown\n                  buttonLabel={\n                    <FiMoreHorizontal className=\"flex self-center opacity-50\" />\n                  }\n                  className=\"z-20 ml-4\"\n                >\n                  <ul className=\"w-40 py-2 space-y-4 text-sm\">\n                    <li>\n                      <span\n                        className=\"cursor-pointer text-primary hover:underline\"\n                        title=\"components\"\n                        onClick={(e) => sendInvite(e, cell.row.values)}\n                      >\n                        <SiMinutemailer className=\"inline ml-6 mr-4\" />\n                        Send Invite\n                      </span>\n                    </li>\n                    <li>\n                      <hr className=\"dark:border-gray-700\" />\n                    </li>\n                    <li className=\"cursor-not-allowed\">\n                      <span\n                        className=\"text-primary hover:underline\"\n                        title=\"Typography\"\n                      >\n                        <MdMore className=\"inline ml-6 mr-4 \" />\n                        More Options\n                      </span>\n                    </li>\n                  </ul>\n                </Dropdown>\n              </span>\n            </div>\n          )\n        else\n          return (\n            <div className=\"inline-flex items-center justify-center w-full align-middle group\">\n              <span className=\"text-green-600\">{cell.render('Cell')}</span>\n            </div>\n          )\n      }\n      if (cell.column.id === 'testSent') {\n        if (cell.row.values?.testSent?.toLowerCase() === 'no')\n          return (\n            <div className=\"inline-flex items-center justify-center w-full text-red-600\">\n              {cell.render('Cell')}\n            </div>\n          )\n        else\n          return (\n            <div className=\"inline-flex items-center justify-center w-full text-green-600\">\n              {cell.render('Cell')}\n            </div>\n          )\n      }\n      if (cell.column.id === 'testStatus') {\n        if (cell.row?.values?.testStatus?.toLowerCase() === 'pending')\n          return (\n            <div className=\"inline-flex items-center justify-center w-full text-yellow-700\">\n              {cell.render('Cell')}\n            </div>\n          )\n        else\n          return (\n            <div className=\"inline-flex items-center justify-center w-full text-green-600\">\n              {cell.render('Cell')}\n            </div>\n          )\n      }\n      return (\n        <div className=\"inline-flex items-center justify-center w-full \">\n          {cell.render('Cell')}\n        </div>\n      )\n    }\n    return (\n      <>\n        {page.map((row, i1) => {\n          prepareRow(row)\n          return (\n            <motion.tr\n              {...row.getRowProps({\n                layoutTransition: spring,\n                exit: { opacity: 0, maxHeight: 0 },\n              })}\n              className={`${i1 % 2 ? '' : ''} text-center h-16`}\n            >\n              {row.cells.map((cell, i) => {\n                return (\n                  <motion.td\n                    {...cell.getCellProps({\n                      layoutTransition: spring,\n                    })}\n                    className=\"text-center\"\n                    // className={`${\n                    //   i1 % 2 ? 'bg-gray-400 border-gray-400' : ''\n                    // } h-16`}\n                  >\n                    {renderTableCell\n                      ? renderTableCell(cell)\n                      : cell.render('Cell')}\n                  </motion.td>\n                )\n              })}\n            </motion.tr>\n          )\n        })}\n        {/* <tr>\n          <td\n            className=\"w-full text-right\"\n            // colSpan={visibleColumns.length}\n            style={{\n              textAlign: 'left',\n            }}\n          >\n            <Button type=\"primary\">Add new data</Button>\n          </td>\n        </tr> */}\n      </>\n    )\n  }\n\n  const renderExtraTableTd = (controls, formikProps) => {\n    const { visibleColumns } = controls\n    const {\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      isSubmitting,\n    } = formikProps\n    return (\n      <tr role=\"row\" className=\"h-16 elevation-3\">\n        <td role=\"cell\" className=\"text-center\">\n          &nbsp;\n        </td>\n        <td role=\"cell\" className=\"text-right\">\n          <div className=\"flex flex-col items-start\">\n            <input\n              value={values.fName}\n              name=\"fName\"\n              id=\"fName\"\n              placeholder={'First Name'}\n              className=\"h-8 px-2 radius-input hover:border-primary\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n            />\n            <span>\n              {errors.fName && touched.fName && (\n                <p className=\"text-xs text-left text-red-600\">{errors.fName}</p>\n              )}\n            </span>\n          </div>\n        </td>\n        <td role=\"cell\" className=\"text-right\">\n          <div className=\"flex flex-col items-start\">\n            <input\n              value={values.lName}\n              name=\"lName\"\n              id=\"lName\"\n              placeholder={'Last Name'}\n              className=\"h-8 px-2 radius-input hover:border-primary\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n            />\n            <span>\n              {errors.lName && touched.lName && (\n                <p className=\"text-xs text-left text-red-600\">{errors.lName}</p>\n              )}\n            </span>\n          </div>\n        </td>\n        <td role=\"cell\" className=\"text-right\" placeholder={'Last Name'}>\n          <div className=\"flex flex-col items-start\">\n            <input\n              value={values.email}\n              id=\"email\"\n              name=\"email\"\n              placeholder={'Email'}\n              className=\"h-8 px-2 radius-input hover:border-primary\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n            />\n            <span>\n              {errors.email && touched.email && (\n                <p className=\"text-xs text-left text-red-600\">{errors.email}</p>\n              )}\n            </span>\n          </div>\n        </td>\n        <td\n          role=\"cell\"\n          className=\"w-full text-right\"\n          colSpan={visibleColumns.length - 4}\n        >\n          <Button\n            type=\"primary\"\n            className=\"spinner\"\n            htmlFor=\"submit\"\n            disabled={isSubmitting}\n          >\n            Add new\n          </Button>\n        </td>\n      </tr>\n    )\n  }\n\n  const handleBatchActions = (controls) => {\n    const { state: tableState, selectedFlatRows } = controls\n    const { selectedRowIds } = tableState\n    const selectedLen = Object.keys(selectedRowIds || {}).length\n\n    const selectedMembers = selectedFlatRows.map((d) => d.original)\n    const uninvitedMembers = selectedMembers.filter(\n      (d) => d['testSent']?.toLowerCase() !== 'no'\n    )\n    const uninvitedLen = uninvitedMembers.length\n\n    return (\n      <div\n        className={`flex ${\n          selectedLen ? 'justify-between' : 'justify-end'\n        } w-full mb-2`}\n      >\n        {selectedLen > 0 && (\n          <>\n            <p>You have selected {selectedLen} members</p>\n            {uninvitedLen > 0 && (\n              <div>\n                <Button onClick={(e) => sendInvite(e, uninvitedMembers)}>\n                  Send Invitation to {uninvitedLen} members\n                </Button>\n              </div>\n            )}\n          </>\n        )}\n        {!selectedLen && (\n          <>\n            <UploadComponent\n              allowedExtensions={[\n                'xls',\n                'xlsx',\n                'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n              ]}\n              // autoUpload={true}\n              // render={(el: HTMLElement | null) => {\n              render={(el: HTMLElement | null) => {\n                return (\n                  <span\n                    className=\"flex justify-end w-full px-4 py-2 border cursor-pointer hover:text-primary-lighter hover:border-primary-darker text-primary\"\n                    onClick={(e) => {\n                      e.preventDefault()\n                      el && el.click()\n                    }}\n                  >\n                    <FaCloudUploadAlt className=\"w-6 h-6 mr-2\" />\n                    Upload SpreadSheet\n                  </span>\n                )\n              }}\n              uploadHandler={(data: any, state: any, cb: any) => {\n                uploadDatabase(state, 'spreadsheet')\n              }}\n            />\n            {/* <Button\n              type=\"secondary\"\n              className=\"self-end\"\n              onClick={(e) =>\n                uploadDatabase(e, uninvitedMembers, 'spreadsheet')\n              }\n            >\n              Upload SpreadSheet\n            </Button> */}\n          </>\n        )}\n      </div>\n    )\n  }\n\n  const handleFormSubmit = async (data, cb) => {\n    const payload: {\n      firstName?: string\n      lastName?: string\n      email?: string\n      inviteSent?: string\n      testSent?: string\n      testStatus?: string\n    } = {}\n    payload.firstName = data.fName\n    payload.lastName = data.lName\n    payload.email = data.email\n    payload.inviteSent = 'No'\n    payload.testSent = 'No'\n    payload.testStatus = 'NA'\n\n    const resp: any = await inviteUser([payload])\n    if (resp) {\n      cb.resetForm()\n      setData(resp.data)\n    }\n  }\n\n  const tableWrapper = styled.form`\n    table {\n      /* border-spacing: 0; */\n      /* border: 1px solid black; */\n      border-collapse: separate;\n      border-style: 1em;\n      border-spacing: 1em;\n      /* border-spacing: 0 1em; */\n\n      thead tr {\n        :first-child {\n          display: none;\n        }\n        /* border: none !important; */\n        /* border-bottom: 2px solid; */\n        background: none !important;\n        border-radius: none !important;\n      }\n\n      tbody {\n        tr {\n          border-radius: 1rem;\n          padding: 1.5rem;\n\n          margin: 0.5rem 0;\n          box-shadow: 0 3px 6px rgba(0, 0, 0, 0.57),\n            0 2px 4px rgba(0, 0, 0, 0.05);\n          transition: transform 0.5s -webkit-transform 0.5s;\n          :last-child {\n            border-radius: 1rem;\n            td {\n              /* border-bottom: 0; */\n            }\n          }\n        }\n      }\n\n      th,\n      td {\n        margin: 0;\n        padding: 0.5rem;\n        /* border-bottom: 1px solid black;\n      border-right: 1px solid black; */\n\n        :last-child {\n          border-right: 0;\n        }\n\n        /* input {\n        font-size: 1rem;\n        padding: 0;\n        margin: 0;\n        border: 0;\n      } */\n      }\n\n      .pagination {\n        padding: 0.5rem;\n      }\n    }\n  `\n\n  return (\n    <Layout\n      title=\"Your Awesome App\"\n      className=\"container max-w-6xl py-8 overflow-auto\"\n      header={headerSearch()}\n    >\n      {/* <ToastContainer /> */}\n\n      {/* <h1 className=\"mb-4 text-3xl font-black dark:text-gray-100\">Welcome</h1> */}\n      <p className=\"mb-4 text-lg font-bolder\">\n        Demo spreadsheet upload and email list system.\n      </p>\n      <div>\n        <Formik\n          initialValues={{ fName: '', lName: '', email: '' }}\n          onSubmit={handleFormSubmit}\n          validateOnMount={false}\n          validationSchema={Yup.object({\n            fName: Yup.string()\n              .min(3, 'Must contain 3 characters or more')\n              .required('First Name is required'),\n            lName: Yup.string()\n              .min(3, 'Must contain 3 characters or more')\n              .required('Last Name is required'),\n            email: Yup.string()\n              .email('Invalid email address')\n              .required('Please provide the email'),\n          })}\n        >\n          {(formikProps) => (\n            <TableComponent\n              columns={columns}\n              data={data}\n              setData={setData}\n              tableClassName=\"w-full\"\n              filterTypes={filterTypes}\n              defaultColumn={defaultColumn}\n              globalFilter={{ use: true, Component: GlobalFilter }}\n              renderHeader={renderTableHeader}\n              // renderFilter= {(column: unknown) => JSX.Element}\n              // renderTableBody={renderTableBody}\n              renderTableRow={renderTableRow}\n              renderExtraTableTd={(controls) =>\n                renderExtraTableTd(controls, formikProps)\n              }\n              // renderTableCell= {(cell: unknown) => JSX.Element}\n              handleTableControls={{ jsx: handleBatchActions }}\n              tableWrapper={{\n                use: true,\n                wrapper: tableWrapper,\n                props: {\n                  onSubmit: formikProps.handleSubmit,\n                },\n              }}\n              customHook={renderTableHooks}\n            />\n          )}\n        </Formik>\n      </div>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"]},"metadata":{},"sourceType":"module"}