{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport namor from 'namor';\n\nvar range = function range(len) {\n  var arr = [];\n\n  for (var i = 0; i < len; i++) {\n    arr.push(i);\n  }\n\n  return arr;\n};\n\nfunction newPerson() {\n  var statusChance = Math.random();\n  var firstName = namor.generate({\n    words: 1,\n    numbers: 0\n  });\n  var lastName = namor.generate({\n    words: 1,\n    numbers: 0\n  });\n  return {\n    firstName: firstName,\n    lastName: lastName,\n    age: Math.floor(Math.random() * 30),\n    visits: Math.floor(Math.random() * 100),\n    progress: Math.floor(Math.random() * 100),\n    email: firstName + lastName + '@gmail.com',\n    status: statusChance > 0.66 ? 'relationship' : statusChance > 0.33 ? 'complicated' : 'single'\n  };\n}\n\nexport default function makeData() {\n  for (var _len = arguments.length, lens = new Array(_len), _key = 0; _key < _len; _key++) {\n    lens[_key] = arguments[_key];\n  }\n\n  var makeDataLevel = function makeDataLevel() {\n    var depth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var len = lens[depth];\n    return range(len).map(function (_) {\n      return _objectSpread(_objectSpread({}, newPerson()), {}, {\n        subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined\n      });\n    });\n  };\n\n  return makeDataLevel();\n}","map":{"version":3,"sources":["/mnt/c/Users/arash/Documents/DevInDoc/Getaboard/demoEmail/reward-test/src/utils/helpers.ts"],"names":["namor","range","len","arr","i","push","newPerson","statusChance","Math","random","firstName","generate","words","numbers","lastName","age","floor","visits","progress","email","status","makeData","lens","makeDataLevel","depth","map","_","subRows","undefined"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,GAAD,EAAiB;AAC7B,MAAMC,GAAG,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;AAC5BD,IAAAA,GAAG,CAACE,IAAJ,CAASD,CAAT;AACD;;AACD,SAAOD,GAAP;AACD,CAND;;AAQA,SAASG,SAAT,GAAqB;AACnB,MAAMC,YAAoB,GAAGC,IAAI,CAACC,MAAL,EAA7B;AACA,MAAMC,SAAS,GAAGV,KAAK,CAACW,QAAN,CAAe;AAAEC,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,OAAO,EAAE;AAArB,GAAf,CAAlB;AACA,MAAMC,QAAQ,GAAGd,KAAK,CAACW,QAAN,CAAe;AAAEC,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,OAAO,EAAE;AAArB,GAAf,CAAjB;AACA,SAAO;AACLH,IAAAA,SAAS,EAATA,SADK;AAELI,IAAAA,QAAQ,EAARA,QAFK;AAGLC,IAAAA,GAAG,EAAEP,IAAI,CAACQ,KAAL,CAAWR,IAAI,CAACC,MAAL,KAAgB,EAA3B,CAHA;AAILQ,IAAAA,MAAM,EAAET,IAAI,CAACQ,KAAL,CAAWR,IAAI,CAACC,MAAL,KAAgB,GAA3B,CAJH;AAKLS,IAAAA,QAAQ,EAAEV,IAAI,CAACQ,KAAL,CAAWR,IAAI,CAACC,MAAL,KAAgB,GAA3B,CALL;AAMLU,IAAAA,KAAK,EAAET,SAAS,GAAGI,QAAZ,GAAuB,YANzB;AAOLM,IAAAA,MAAM,EACJb,YAAY,GAAG,IAAf,GACI,cADJ,GAEIA,YAAY,GAAG,IAAf,GACA,aADA,GAEA;AAZD,GAAP;AAcD;;AAED,eAAe,SAASc,QAAT,GAA2B;AAAA,oCAANC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AACxC,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAe;AAAA,QAAdC,KAAc,uEAAN,CAAM;AACnC,QAAMtB,GAAG,GAAGoB,IAAI,CAACE,KAAD,CAAhB;AACA,WAAOvB,KAAK,CAACC,GAAD,CAAL,CAAWuB,GAAX,CAAe,UAACC,CAAD,EAAO;AAC3B,6CACKpB,SAAS,EADd;AAEEqB,QAAAA,OAAO,EAAEL,IAAI,CAACE,KAAK,GAAG,CAAT,CAAJ,GAAkBD,aAAa,CAACC,KAAK,GAAG,CAAT,CAA/B,GAA6CI;AAFxD;AAID,KALM,CAAP;AAMD,GARD;;AAUA,SAAOL,aAAa,EAApB;AACD","sourcesContent":["import namor from 'namor'\n\nconst range = (len: number) => {\n  const arr = []\n  for (let i = 0; i < len; i++) {\n    arr.push(i)\n  }\n  return arr\n}\n\nfunction newPerson() {\n  const statusChance: number = Math.random()\n  const firstName = namor.generate({ words: 1, numbers: 0 })\n  const lastName = namor.generate({ words: 1, numbers: 0 })\n  return {\n    firstName,\n    lastName,\n    age: Math.floor(Math.random() * 30),\n    visits: Math.floor(Math.random() * 100),\n    progress: Math.floor(Math.random() * 100),\n    email: firstName + lastName + '@gmail.com',\n    status:\n      statusChance > 0.66\n        ? 'relationship'\n        : statusChance > 0.33\n        ? 'complicated'\n        : 'single',\n  }\n}\n\nexport default function makeData(...lens) {\n  const makeDataLevel = (depth = 0) => {\n    const len = lens[depth]\n    return range(len).map((_) => {\n      return {\n        ...newPerson(),\n        subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined,\n      }\n    })\n  }\n\n  return makeDataLevel()\n}\n"]},"metadata":{},"sourceType":"module"}