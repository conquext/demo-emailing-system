{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport clsx from 'clsx';\n\nvar Button = function Button(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'primary' : _ref$type,\n      _ref$loading = _ref.loading,\n      loading = _ref$loading === void 0 ? false : _ref$loading,\n      props = _objectWithoutProperties(_ref, [\"children\", \"className\", \"type\", \"loading\"]);\n\n  var disabled = props.disabled || loading;\n  var mergedClassName = clsx('px-4 py-2', {\n    'text-white': !disabled,\n    'text-gray-500 dark:text-gray-700': disabled\n  }, {\n    'bg-primary hover:bg-primary-darker': !disabled && type === 'primary',\n    'bg-secondary hover:bg-secondary-darker': !disabled && type === 'secondary',\n    'bg-gray-300 dark:bg-gray-800': disabled\n  }, {\n    'cursor-not-allowed': disabled && !loading,\n    'cursor-wait': loading\n  }, className);\n  return __jsx(\"button\", _extends({\n    className: mergedClassName,\n    disabled: disabled\n  }, props), children, loading && '...');\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/mnt/c/Users/arash/Documents/DevInDoc/Getaboard/demoEmail/reward-test/src/components/Button.tsx"],"names":["React","clsx","Button","children","className","type","loading","props","disabled","mergedClassName"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAQA,IAAMC,MAA4D,GAAG,SAA/DA,MAA+D,OAM/D;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,uBAHJC,IAGI;AAAA,MAHJA,IAGI,0BAHG,SAGH;AAAA,0BAFJC,OAEI;AAAA,MAFJA,OAEI,6BAFM,KAEN;AAAA,MADDC,KACC;;AACJ,MAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAN,IAAkBF,OAAnC;AAEA,MAAMG,eAAe,GAAGR,IAAI,CAC1B,WAD0B,EAE1B;AAAE,kBAAc,CAACO,QAAjB;AAA2B,wCAAoCA;AAA/D,GAF0B,EAG1B;AACE,0CAAsC,CAACA,QAAD,IAAaH,IAAI,KAAK,SAD9D;AAEE,8CACE,CAACG,QAAD,IAAaH,IAAI,KAAK,WAH1B;AAIE,oCAAgCG;AAJlC,GAH0B,EAS1B;AACE,0BAAsBA,QAAQ,IAAI,CAACF,OADrC;AAEE,mBAAeA;AAFjB,GAT0B,EAa1BF,SAb0B,CAA5B;AAgBA,SACE;AAAQ,IAAA,SAAS,EAAEK,eAAnB;AAAoC,IAAA,QAAQ,EAAED;AAA9C,KAA4DD,KAA5D,GACGJ,QADH,EAEGG,OAAO,IAAI,KAFd,CADF;AAMD,CA/BD;;KAAMJ,M;AAiCN,eAAeA,MAAf","sourcesContent":["import * as React from 'react'\nimport clsx from 'clsx'\n\nexport interface Props {\n  type?: 'primary' | 'secondary'\n  className?: string | Record<string, unknown>\n  loading?: boolean\n}\n\nconst Button: React.FC<Props & React.HTMLProps<HTMLButtonElement>> = ({\n  children,\n  className,\n  type = 'primary',\n  loading = false,\n  ...props\n}) => {\n  const disabled = props.disabled || loading\n\n  const mergedClassName = clsx(\n    'px-4 py-2',\n    { 'text-white': !disabled, 'text-gray-500 dark:text-gray-700': disabled },\n    {\n      'bg-primary hover:bg-primary-darker': !disabled && type === 'primary',\n      'bg-secondary hover:bg-secondary-darker':\n        !disabled && type === 'secondary',\n      'bg-gray-300 dark:bg-gray-800': disabled,\n    },\n    {\n      'cursor-not-allowed': disabled && !loading,\n      'cursor-wait': loading,\n    },\n    className\n  )\n\n  return (\n    <button className={mergedClassName} disabled={disabled} {...props}>\n      {children}\n      {loading && '...'}\n    </button>\n  )\n}\n\nexport default Button\n"]},"metadata":{},"sourceType":"module"}