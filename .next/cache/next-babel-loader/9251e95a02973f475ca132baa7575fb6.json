{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nexport const baseURL = 'http://localhost:3002';\nexport const makeApiCall = axiosConfigObj => {\n  const config = _objectSpread(_objectSpread({}, axiosConfigObj), {}, {\n    baseURL\n  });\n\n  return new Promise((resolve, reject) => {\n    return axios(config).then(({\n      data\n    }) => {\n      return resolve(data);\n    }).catch(err => {\n      return reject(err);\n    });\n  });\n};\nexport const inviteUser = data => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const url = `/sendinvite`;\n      let resp = null;\n      resp = await makeApiCall({\n        url,\n        headers: {\n          Authorization: ``\n        },\n        method: 'post',\n        data\n      });\n      return resolve(resp);\n    } catch (error) {\n      return reject(error);\n    }\n  });\n};","map":{"version":3,"sources":["/mnt/c/Users/arash/Documents/DevInDoc/Getaboard/demoEmail/reward-test/src/utils/api.ts"],"names":["axios","baseURL","makeApiCall","axiosConfigObj","config","Promise","resolve","reject","then","data","catch","err","inviteUser","url","resp","headers","Authorization","method","error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAO,GAAG,uBAAhB;AAEP,OAAO,MAAMC,WAAW,GAAIC,cAAD,IAAoB;AAC7C,QAAMC,MAAM,mCACPD,cADO;AAEVF,IAAAA;AAFU,IAAZ;;AAIA,SAAO,IAAII,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,WAAOP,KAAK,CAACI,MAAD,CAAL,CACJI,IADI,CACC,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAClB,aAAOH,OAAO,CAACG,IAAD,CAAd;AACD,KAHI,EAIJC,KAJI,CAIGC,GAAD,IAAS;AACd,aAAOJ,MAAM,CAACI,GAAD,CAAb;AACD,KANI,CAAP;AAOD,GARM,CAAP;AASD,CAdM;AAgBP,OAAO,MAAMC,UAAU,GAAIH,IAAD,IAAU;AAClC,SAAO,IAAIJ,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC5C,QAAI;AACF,YAAMM,GAAG,GAAI,aAAb;AACA,UAAIC,IAAI,GAAG,IAAX;AACAA,MAAAA,IAAI,GAAG,MAAMZ,WAAW,CAAC;AACvBW,QAAAA,GADuB;AAEvBE,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAG;AAAlB,SAFc;AAGvBC,QAAAA,MAAM,EAAE,MAHe;AAIvBR,QAAAA;AAJuB,OAAD,CAAxB;AAMA,aAAOH,OAAO,CAACQ,IAAD,CAAd;AACD,KAVD,CAUE,OAAOI,KAAP,EAAc;AACd,aAAOX,MAAM,CAACW,KAAD,CAAb;AACD;AACF,GAdM,CAAP;AAeD,CAhBM","sourcesContent":["import axios from 'axios'\n\nexport const baseURL = 'http://localhost:3002'\n\nexport const makeApiCall = (axiosConfigObj) => {\n  const config = {\n    ...axiosConfigObj,\n    baseURL,\n  }\n  return new Promise((resolve, reject) => {\n    return axios(config)\n      .then(({ data }) => {\n        return resolve(data)\n      })\n      .catch((err) => {\n        return reject(err)\n      })\n  })\n}\n\nexport const inviteUser = (data) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const url = `/sendinvite`\n      let resp = null\n      resp = await makeApiCall({\n        url,\n        headers: { Authorization: `` },\n        method: 'post',\n        data,\n      })\n      return resolve(resp)\n    } catch (error) {\n      return reject(error)\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}