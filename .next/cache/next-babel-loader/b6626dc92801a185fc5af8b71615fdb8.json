{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useMemo, useState } from 'react';\nimport Layout from '@components/layout/Layout';\nimport matchSorter from 'match-sorter';\nimport TableComponent from '@components/Table';\nimport makeData from '@utils/helpers';\n\nvar headerSearch = function headerSearch() {\n  return __jsx(\"div\", {\n    className: \"flex justify-start\",\n    style: {\n      width: '55%'\n    }\n  }, __jsx(\"p\", null, \"an header search here\"));\n};\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, {\n    keys: [function (row) {\n      return row.values[id];\n    }]\n  });\n} // Let the table remove the filter if the string is empty\n\n\nfuzzyTextFilterFn.autoRemove = function (val) {\n  return !val;\n};\n\nvar filterTypes = useMemo(function () {\n  return {\n    // Add a new fuzzyTextFilterFn filter type.\n    fuzzyText: fuzzyTextFilterFn,\n    // Or, override the default text filter to use\n    // \"startWith\"\n    text: function text(rows, id, filterValue) {\n      return rows.filter(function (row) {\n        var rowValue = row.values[id];\n        return rowValue !== undefined ? String(rowValue).toLowerCase().startsWith(String(filterValue).toLowerCase()) : true;\n      });\n    }\n  };\n}, []);\n\nvar IndexPage = function IndexPage() {\n  _s();\n\n  var _useState = useState(function () {\n    return makeData(20);\n  }),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var columns = useMemo(function () {\n    return [{\n      Header: 'Table',\n      columns: [{\n        Header: 'First Name',\n        accessor: 'firstName'\n      }, {\n        Header: 'Last Name',\n        accessor: 'lastName'\n      }, {\n        Header: 'Email',\n        accessor: 'email'\n      }]\n    }, {\n      Header: 'Test Info',\n      columns: [{\n        Header: 'Invite Sent',\n        accessor: 'inviteSent'\n      }, {\n        Header: 'Test Sent',\n        accessor: 'testSent'\n      }, {\n        Header: 'Test Status',\n        accessor: 'testStatus'\n      }]\n    }];\n  }, []);\n  return __jsx(Layout, {\n    title: \"Your Awesome App\",\n    className: \"container py-8 overflow-auto\",\n    header: headerSearch()\n  }, __jsx(\"p\", {\n    className: \"mb-4 text-lg font-light\"\n  }, \"Demo spreadsheet upload and email list system.\"), __jsx(\"div\", null, __jsx(TableComponent, {\n    columns: columns,\n    data: data,\n    setData: setData,\n    filterTypes: filterTypes // defaultColumn= {DefaultColumn}\n    // globalFilter= {GlobalFilter}\n    // renderHeader= {(header: unknown) => JSX.Element}\n    // renderFilter= {(column: unknown) => JSX.Element}\n    // renderTableBody= {(column: unknown) => JSX.Element}\n    // renderTableRow= {(row: unknown) => JSX.Element}\n    // renderTableCell= {(cell: unknown) => JSX.Element}\n    // customHook= {(hooks: unknown) => unknown}\n    // editableFields={['firstName', 'lastName', 'email']}\n\n  })));\n};\n\n_s(IndexPage, \"xFHaw8OZsLByfcaXvjnn4j8ISzg=\");\n\n_c = IndexPage;\nexport default IndexPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"sources":["/mnt/c/Users/arash/Documents/DevInDoc/Getaboard/demoEmail/reward-test/pages/index.tsx"],"names":["React","useMemo","useState","Layout","matchSorter","TableComponent","makeData","headerSearch","width","fuzzyTextFilterFn","rows","id","filterValue","keys","row","values","autoRemove","val","filterTypes","fuzzyText","text","filter","rowValue","undefined","String","toLowerCase","startsWith","IndexPage","data","setData","columns","Header","accessor"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react'\nimport { NextPage } from 'next'\nimport Layout from '@components/layout/Layout'\nimport routes from '@utils/routes'\nimport Link from 'next/link'\nimport matchSorter from 'match-sorter'\nimport { FiArrowRight } from 'react-icons/fi'\nimport TableComponent from '@components/Table'\nimport makeData from '@utils/helpers'\n\nconst headerSearch = () => {\n  return (\n    <div className=\"flex justify-start\" style={{ width: '55%' }}>\n      <p>an header search here</p>\n    </div>\n  )\n}\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] })\n}\n\n// Let the table remove the filter if the string is empty\nfuzzyTextFilterFn.autoRemove = (val) => !val\n\nconst filterTypes = useMemo(\n  () => ({\n    // Add a new fuzzyTextFilterFn filter type.\n    fuzzyText: fuzzyTextFilterFn,\n    // Or, override the default text filter to use\n    // \"startWith\"\n    text: (rows, id, filterValue) => {\n      return rows.filter((row) => {\n        const rowValue = row.values[id]\n        return rowValue !== undefined\n          ? String(rowValue)\n              .toLowerCase()\n              .startsWith(String(filterValue).toLowerCase())\n          : true\n      })\n    },\n  }),\n  []\n)\n\nconst IndexPage: NextPage = () => {\n  const [data, setData] = useState(() => makeData(20))\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'Table',\n        columns: [\n          {\n            Header: 'First Name',\n            accessor: 'firstName',\n          },\n          {\n            Header: 'Last Name',\n            accessor: 'lastName',\n          },\n          {\n            Header: 'Email',\n            accessor: 'email',\n          },\n        ],\n      },\n      {\n        Header: 'Test Info',\n        columns: [\n          {\n            Header: 'Invite Sent',\n            accessor: 'inviteSent',\n          },\n          {\n            Header: 'Test Sent',\n            accessor: 'testSent',\n          },\n          {\n            Header: 'Test Status',\n            accessor: 'testStatus',\n          },\n        ],\n      },\n    ],\n    []\n  )\n  return (\n    <Layout\n      title=\"Your Awesome App\"\n      className=\"container py-8 overflow-auto\"\n      header={headerSearch()}\n    >\n      {/* <h1 className=\"mb-4 text-3xl font-black dark:text-gray-100\">Welcome</h1> */}\n      <p className=\"mb-4 text-lg font-light\">\n        Demo spreadsheet upload and email list system.\n      </p>\n      <div>\n        <TableComponent\n          columns={columns}\n          data={data}\n          setData={setData}\n          filterTypes={filterTypes}\n          // defaultColumn= {DefaultColumn}\n          // globalFilter= {GlobalFilter}\n          // renderHeader= {(header: unknown) => JSX.Element}\n          // renderFilter= {(column: unknown) => JSX.Element}\n          // renderTableBody= {(column: unknown) => JSX.Element}\n          // renderTableRow= {(row: unknown) => JSX.Element}\n          // renderTableCell= {(cell: unknown) => JSX.Element}\n          // customHook= {(hooks: unknown) => unknown}\n          // editableFields={['firstName', 'lastName', 'email']}\n        />\n      </div>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"]},"metadata":{},"sourceType":"module"}